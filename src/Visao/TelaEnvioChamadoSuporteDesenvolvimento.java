/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Dao.ChamadosDesenvolvimentoDao;
import Dao.ChamadosSuporteDao;
import Dao.ConexaoBancoDados;
import Dao.ListaChamadosSuporteDao;
import Dao.LogSistemaDao;
import Modelo.ChamadoSuporte;
import Modelo.LogSistema;
import static Visao.LoginHD.nameUser;
import static Visao.TelaChamadoSuporte.jBtAlterar;
import static Visao.TelaChamadoSuporte.jBtAuditoria;
import static Visao.TelaChamadoSuporte.jBtEncerrar;
import static Visao.TelaChamadoSuporte.jBtEnviar;
import static Visao.TelaChamadoSuporte.jBtExcluir;
import static Visao.TelaChamadoSuporte.jBtImprimir;
import static Visao.TelaChamadoSuporte.jBtNovo;
import static Visao.TelaChamadoSuporte.jBtNovoItem;
import static Visao.TelaChamadoSuporte.jBtReabrir;
import static Visao.TelaChamadoSuporte.jStatusChamado;
import static Visao.TelaChamadoSuporte.jIdChamado;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronal
 */
public class TelaEnvioChamadoSuporteDesenvolvimento extends javax.swing.JDialog {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ChamadoSuporte objCHSup = new ChamadoSuporte();
    ChamadosDesenvolvimentoDao control = new ChamadosDesenvolvimentoDao();
    ListaChamadosSuporteDao listarChamadosSup = new ListaChamadosSuporteDao();
    ChamadosSuporteDao controlDao = new ChamadosSuporteDao();
    //
    LogSistemaDao controlLog = new LogSistemaDao();
    LogSistema objLogSys = new LogSistema();
    String nomeAtendente = "";
    public static int qtdChamados;
    String idChamado;
    int count2 = 0;
    int flag = 0;
    //
    String nomeModuloTela = "Suporte Técnico:Enviando Chamados para desenvolvimento";
    String statusMov;
    String horaMov;
    String dataModFinal;
    //
    int codigoItem = 0;
    int codigoRegistro = 0;
    int codigoChamadoDes = 0;
    int idSolicitante = 0;
    //
    String statusEnvio = "ENVIADO PARA O DESENVOLVIMENTO";
    String utiliza = "Não";
    String descricaoSoftware;
    String descricaoModulo;

    /**
     * Creates new form TelaEnvioChamadoSuporteDesenvolvimento
     */
    public static TelaChamadoSuporte chamaSuporte;

    public TelaEnvioChamadoSuporteDesenvolvimento(TelaChamadoSuporte parent, boolean modal) {
        this.chamaSuporte = parent;
        this.setModal(modal);
        setLocationRelativeTo(chamaSuporte);
        initComponents();
        corCampos();
        buscarDadosChamadoSuporte();
        buscarSoftMod();
        listarChamadosSuporte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDataChamadoEnvio = new com.toedter.calendar.JDateChooser();
        jIdChamadoEnvio = new javax.swing.JTextField();
        jStatusChamadoEnvio = new javax.swing.JTextField();
        jAtendenteEnvio = new javax.swing.JTextField();
        jSolicitanteEnvio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jUnidadePrisionalEnvio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaChamadosSuporte = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaChamadosDesenvolvimento = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jBtConfirmar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jBtEnviarUm = new javax.swing.JButton();
        jBtEnviarTodos = new javax.swing.JButton();
        jBtRetornarUm = new javax.swing.JButton();
        jBtRetornarTodos = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtotalRegistrosSuporte = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtotalRegistrosDesenvol = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("...::: Enviar Chamado para Desenvolvimento :::...");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/Download-16.png")));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Chamado");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Atendente");

        jDataChamadoEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataChamadoEnvio.setEnabled(false);

        jIdChamadoEnvio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdChamadoEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdChamadoEnvio.setEnabled(false);

        jStatusChamadoEnvio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusChamadoEnvio.setForeground(new java.awt.Color(204, 0, 0));
        jStatusChamadoEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusChamadoEnvio.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusChamadoEnvio.setEnabled(false);

        jAtendenteEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAtendenteEnvio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jAtendenteEnvio.setEnabled(false);

        jSolicitanteEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSolicitanteEnvio.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Solicitante");

        jUnidadePrisionalEnvio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jUnidadePrisionalEnvio.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Unidade Prisional");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jStatusChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 158, Short.MAX_VALUE))
                            .addComponent(jAtendenteEnvio)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jSolicitanteEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jUnidadePrisionalEnvio))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jAtendenteEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jStatusChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdChamadoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jSolicitanteEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jUnidadePrisionalEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel10)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabelaChamadosSuporte.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaChamadosSuporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Hora Inicio", "Hora Termino", "Texto do Chamado do Suporte"
            }
        ));
        jScrollPane1.setViewportView(jTabelaChamadosSuporte);
        if (jTabelaChamadosSuporte.getColumnModel().getColumnCount() > 0) {
            jTabelaChamadosSuporte.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaChamadosSuporte.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaChamadosSuporte.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaChamadosSuporte.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaChamadosSuporte.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaChamadosSuporte.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaChamadosSuporte.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaChamadosSuporte.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaChamadosSuporte.getColumnModel().getColumn(4).setMinWidth(550);
            jTabelaChamadosSuporte.getColumnModel().getColumn(4).setMaxWidth(550);
        }

        jTabelaChamadosDesenvolvimento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaChamadosDesenvolvimento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Hora Inicio", "Hora Termino", "Texto do Chamado do Suporte"
            }
        ));
        jScrollPane2.setViewportView(jTabelaChamadosDesenvolvimento);
        if (jTabelaChamadosDesenvolvimento.getColumnModel().getColumnCount() > 0) {
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(4).setMinWidth(550);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(4).setMaxWidth(550);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 0));
        jLabel5.setText("Desenvolvimento - Destino");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Suporte Técnico - Origem");

        jBtConfirmar.setForeground(new java.awt.Color(0, 102, 0));
        jBtConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/40_16x16.png"))); // NOI18N
        jBtConfirmar.setText("Confirmar");
        jBtConfirmar.setToolTipText("Confirmar Envio dos Chamados para Desenvolvimento");
        jBtConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtConfirmarActionPerformed(evt);
            }
        });

        jBtSair.setForeground(new java.awt.Color(204, 0, 0));
        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setToolTipText("Sair da tela de Envio");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        jBtEnviarUm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/040219081554_16.png"))); // NOI18N
        jBtEnviarUm.setToolTipText("Enviar apenas um Registro Selecionado");
        jBtEnviarUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarUmActionPerformed(evt);
            }
        });

        jBtEnviarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/040219081603_16.png"))); // NOI18N
        jBtEnviarTodos.setToolTipText("Enviar Todos Registros Selecionados");
        jBtEnviarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarTodosActionPerformed(evt);
            }
        });

        jBtRetornarUm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/040219081635_16.png"))); // NOI18N
        jBtRetornarUm.setToolTipText("Retornar Apenas um Registro Selecionado");
        jBtRetornarUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRetornarUmActionPerformed(evt);
            }
        });

        jBtRetornarTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/040219081644_16.png"))); // NOI18N
        jBtRetornarTodos.setToolTipText("Retornar Todos Registros Selecionados");
        jBtRetornarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRetornarTodosActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("Total de Registros:");

        jtotalRegistrosSuporte.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistrosSuporte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtotalRegistrosSuporte.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtotalRegistrosSuporte.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jtotalRegistrosSuporte.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 0));
        jLabel9.setText("Total de Registros:");

        jtotalRegistrosDesenvol.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtotalRegistrosDesenvol.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtotalRegistrosDesenvol.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtotalRegistrosDesenvol.setDisabledTextColor(new java.awt.Color(0, 102, 0));
        jtotalRegistrosDesenvol.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtEnviarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtEnviarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(jBtRetornarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtRetornarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtotalRegistrosSuporte, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtSair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtotalRegistrosDesenvol, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtConfirmar, jBtSair});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtEnviarTodos, jBtEnviarUm, jBtRetornarTodos, jBtRetornarUm});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtEnviarUm)
                    .addComponent(jBtEnviarTodos)
                    .addComponent(jBtRetornarUm)
                    .addComponent(jBtRetornarTodos)
                    .addComponent(jLabel8)
                    .addComponent(jtotalRegistrosSuporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtConfirmar)
                        .addComponent(jBtSair))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel9)
                        .addComponent(jtotalRegistrosDesenvol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtEnviarTodos, jBtEnviarUm, jBtRetornarTodos, jBtRetornarUm});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtEnviarUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarUmActionPerformed
        // TODO add your handling code here:        
        Integer row = jTabelaChamadosDesenvolvimento.getRowCount(); //TABELA DE DESTINO
        if (jTabelaChamadosSuporte.getSelectedRowCount() != 0 && row == 0) { //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
            count2 = count2 + 1;
            qtdChamados = qtdChamados - 1;
            jtotalRegistrosDesenvol.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela 
            jtotalRegistrosSuporte.setText(Integer.toString(qtdChamados));
            //Pega os models das listas, para fazer as inserções e remoções
            DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
            DefaultTableModel modelDestino = (DefaultTableModel) jTabelaChamadosDesenvolvimento.getModel();
            //Cria uma linha para ser incluida na tabela de destino, no meu caso tem duas colunas, adapte para as suas tabelas
            Object[] obj = {jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 0), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 1), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 2), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 3), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 4)};
            // BARRA DE ROLAGEM HORIZONTAL
            jTabelaChamadosDesenvolvimento.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            // ALINHAR TEXTO DA TABELA CENTRALIZADO
            DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
            centralizado.setHorizontalAlignment(SwingConstants.CENTER);
            //
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
            //Adiciona no destino e remove da origem
            modelDestino.addRow(obj);
            modelOrigem.removeRow(jTabelaChamadosSuporte.getSelectedRow());
        } else if (jTabelaChamadosSuporte.getSelectedRowCount() != 0 && row != 0) {
            DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
            DefaultTableModel modelDestino = (DefaultTableModel) jTabelaChamadosDesenvolvimento.getModel();
            count2 = count2 + 1;
            qtdChamados = qtdChamados - 1;
            jtotalRegistrosDesenvol.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela 
            jtotalRegistrosSuporte.setText(Integer.toString(qtdChamados));
            //Adiciona no destino e remove da origem
            Object[] obj = {jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 0), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 1), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 2), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 3), jTabelaChamadosSuporte.getValueAt(jTabelaChamadosSuporte.getSelectedRow(), 4)};
            modelDestino.addRow(obj);
            modelOrigem.removeRow(jTabelaChamadosSuporte.getSelectedRow());
            // BARRA DE ROLAGEM HORIZONTAL
            jTabelaChamadosDesenvolvimento.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            // ALINHAR TEXTO DA TABELA CENTRALIZADO
            DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
            centralizado.setHorizontalAlignment(SwingConstants.CENTER);
            //
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
            jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione pelo menos uma linha para transferir todos registros da tabela.");
            //Não tem nenhuma linha selecionada na tabela de origem, faça um aviso para o usuário ou algo do tipo.                    
        }
    }//GEN-LAST:event_jBtEnviarUmActionPerformed

    private void jBtEnviarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarTodosActionPerformed
        // TODO add your handling code here:
        flag = 0;
        Integer rows = jTabelaChamadosSuporte.getModel().getRowCount();
        Integer row = jTabelaChamadosDesenvolvimento.getModel().getRowCount();
        if (row != 0) {
            JOptionPane.showMessageDialog(rootPane, "Já existe chamados enviados para a tabela de destino, exclua todos os registros ou envie os registros que estão faltando.");
        } else {
            if (rows != 0) {
                DefaultTableModel dadosDestino = (DefaultTableModel) jTabelaChamadosDesenvolvimento.getModel();
                ChamadoSuporte d = new ChamadoSuporte();
                try {
                    for (ChamadoSuporte dd : listarChamadosSup.read()) {
                        jtotalRegistrosDesenvol.setText(jtotalRegistrosSuporte.getText()); // Converter inteiro em string para exibir na tela                                                         
                        dadosDestino.addRow(new Object[]{dd.getIdItemCh(), dd.getDataItemCh(), dd.getHorarioInicio(), dd.getHorarioTermino(), dd.getTextoSuporte()});
                        // BARRA DE ROLAGEM HORIZONTAL
                        jTabelaChamadosDesenvolvimento.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                        // ALINHAR TEXTO DA TABELA CENTRALIZADO
                        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                        //
                        jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                        jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                        jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(2).setCellRenderer(centralizado);
                        jTabelaChamadosDesenvolvimento.getColumnModel().getColumn(3).setCellRenderer(centralizado);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(Level.SEVERE, null, ex);
                }
                // APAGAR TODOS OS REGISTROS DA TABELA COPIADA
                DefaultTableModel tblRemove = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
                if (tblRemove.getRowCount() > 0) {
                    for (int i = 0; i <= tblRemove.getRowCount(); i++) {
                        tblRemove.removeRow(i);
                        tblRemove.setRowCount(0);
                        if (tblRemove.getRowCount() < i) {
                            tblRemove.removeRow(i);
                            tblRemove.setRowCount(0);
                        }
                    }
                }
                // LIMPAR O TOTALIZADOR DA TABELA
                jtotalRegistrosSuporte.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "A tabela com os registros a serem selecionados, não contém itens.");
            }
        }
    }//GEN-LAST:event_jBtEnviarTodosActionPerformed

    private void jBtRetornarUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRetornarUmActionPerformed
        // TODO add your handling code here:       
        Integer rows = jTabelaChamadosDesenvolvimento.getModel().getRowCount();
        if (rows != 0) {
            if (jTabelaChamadosDesenvolvimento.getSelectedRowCount() != 0) { //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
                count2 = count2 - 1;
                qtdChamados = qtdChamados + 1;
                jtotalRegistrosDesenvol.setText(Integer.toString(count2)); // Converter inteiro em string para exibir na tela 
                jtotalRegistrosSuporte.setText(Integer.toString(qtdChamados));
                //Pega os models das listas, para fazer as inserções e remoções
                DefaultTableModel modelOrigem = (DefaultTableModel) jTabelaChamadosDesenvolvimento.getModel();
                DefaultTableModel modelDestino = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
                //Cria uma linha para ser incluida na tabela de destino, no meu caso tem duas colunas, adapte para as suas tabelas
                Object[] obj = {jTabelaChamadosDesenvolvimento.getValueAt(jTabelaChamadosDesenvolvimento.getSelectedRow(), 0), jTabelaChamadosDesenvolvimento.getValueAt(jTabelaChamadosDesenvolvimento.getSelectedRow(), 1), jTabelaChamadosDesenvolvimento.getValueAt(jTabelaChamadosDesenvolvimento.getSelectedRow(), 2), jTabelaChamadosDesenvolvimento.getValueAt(jTabelaChamadosDesenvolvimento.getSelectedRow(), 3), jTabelaChamadosDesenvolvimento.getValueAt(jTabelaChamadosDesenvolvimento.getSelectedRow(), 4)};
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaChamadosSuporte.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaChamadosSuporte.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaChamadosSuporte.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                //Adiciona no destino e remove da origem
                modelDestino.addRow(obj);
                modelOrigem.removeRow(jTabelaChamadosDesenvolvimento.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione pelo menos uma linha para transferir todos registros da tabela.");
                //Não tem nenhuma linha selecionada na tabela de origem, faça um aviso para o usuário ou algo do tipo.            
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Não existe dados a ser excluído.");
        }
    }//GEN-LAST:event_jBtRetornarUmActionPerformed

    private void jBtRetornarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRetornarTodosActionPerformed
        // TODO add your handling code here:
        flag = 0;
        Integer rows = jTabelaChamadosDesenvolvimento.getModel().getRowCount();
        if (rows != 0) {
            DefaultTableModel dadosDestino = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
            ChamadoSuporte d = new ChamadoSuporte();
            try {
                for (ChamadoSuporte dd : listarChamadosSup.read()) {
                    jtotalRegistrosSuporte.setText(jtotalRegistrosDesenvol.getText()); // Converter inteiro em string para exibir na tela                                     
                    dadosDestino.addRow(new Object[]{dd.getIdItemCh(), dd.getDataItemCh(), dd.getHorarioInicio(), dd.getHorarioTermino(), dd.getTextoSuporte()});
                    // BARRA DE ROLAGEM HORIZONTAL
                    jTabelaChamadosSuporte.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    // ALINHAR TEXTO DA TABELA CENTRALIZADO
                    DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                    centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                    //
                    jTabelaChamadosSuporte.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                    jTabelaChamadosSuporte.getColumnModel().getColumn(1).setCellRenderer(centralizado);

                }
            } catch (Exception ex) {
                Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // APAGAR DADOS DA TABELA
        while (jTabelaChamadosDesenvolvimento.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTabelaChamadosDesenvolvimento.getModel()).removeRow(0);
        }
        // LIMPAR O TOTALIZADOR DA TABELA
        jtotalRegistrosDesenvol.setText("");
    }//GEN-LAST:event_jBtRetornarTodosActionPerformed

    private void jBtConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtConfirmarActionPerformed
        // TODO add your handling code here:
        Integer row = jTabelaChamadosDesenvolvimento.getModel().getRowCount();
        if (row == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não existe chamado(s) a ser(em) enviado(s) para o desenvolvimento.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(this, "Se os chamados nos quais estão serão enviados para o desenvolvemento, já tiverem sidos enviados anteriormente,\nos mesmos serão sobreposto. Deseja realmente enviar o(s) registro(s) selecionado(s) mesmo assim?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                gravarChamadosDesenvolvimento();
                jStatusChamadoEnvio.setText(statusEnvio);
                jStatusChamado.setText(statusEnvio);
                objCHSup.setStatusCha(statusEnvio);
                objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                controlDao.encerrarChamadoSup(objCHSup);
                JOptionPane.showMessageDialog(rootPane, "Registro enviado com sucesso para o desenvolvimento.");
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(true);
                jBtExcluir.setEnabled(true);
                jBtAuditoria.setEnabled(true);
                //
                jBtEncerrar.setEnabled(true);
                jBtImprimir.setEnabled(true);
                jBtReabrir.setEnabled(true);
                jBtEnviar.setEnabled(true);
                //
                jBtNovoItem.setEnabled(true);
                dispose();
            }
        }
    }//GEN-LAST:event_jBtConfirmarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtEncerrar.setEnabled(true);
        jBtImprimir.setEnabled(true);
        jBtReabrir.setEnabled(true);
        jBtEnviar.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaEnvioChamadoSuporteDesenvolvimento dialog = new TelaEnvioChamadoSuporteDesenvolvimento(chamaSuporte, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAtendenteEnvio;
    private javax.swing.JButton jBtConfirmar;
    private javax.swing.JButton jBtEnviarTodos;
    private javax.swing.JButton jBtEnviarUm;
    private javax.swing.JButton jBtRetornarTodos;
    private javax.swing.JButton jBtRetornarUm;
    private javax.swing.JButton jBtSair;
    private com.toedter.calendar.JDateChooser jDataChamadoEnvio;
    public static javax.swing.JTextField jIdChamadoEnvio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextField jSolicitanteEnvio;
    private javax.swing.JTextField jStatusChamadoEnvio;
    private javax.swing.JTable jTabelaChamadosDesenvolvimento;
    private javax.swing.JTable jTabelaChamadosSuporte;
    public static javax.swing.JTextField jUnidadePrisionalEnvio;
    private javax.swing.JTextField jtotalRegistrosDesenvol;
    private javax.swing.JTextField jtotalRegistrosSuporte;
    // End of variables declaration//GEN-END:variables

    public void corCampos() {
        jIdChamadoEnvio.setBackground(Color.white);
        jStatusChamadoEnvio.setBackground(Color.white);
        jDataChamadoEnvio.setBackground(Color.white);
        jAtendenteEnvio.setBackground(Color.white);
        jSolicitanteEnvio.setBackground(Color.white);
        jUnidadePrisionalEnvio.setBackground(Color.white);
        //
        jtotalRegistrosSuporte.setBackground(Color.white);
        jtotalRegistrosDesenvol.setBackground(Color.white);
    }

    public void buscarDadosChamadoSuporte() {
        nomeAtendente = nameUser;
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CHAMADOS_SUPORTE "
                    + "INNER JOIN USUARIOS "
                    + "ON CHAMADOS_SUPORTE.IdUsuario=USUARIOS.IdUsuario "
                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                    + "ON CHAMADOS_SUPORTE.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                    + "INNER JOIN SOLICITANTES "
                    + "ON CHAMADOS_SUPORTE.IdSolicitante=SOLICITANTES.IdSolicitante  "
                    + "WHERE CHAMADOS_SUPORTE.IdCHSup='" + jIdChamado.getText() + "' "
                    + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
            conecta.rs.first();
            jIdChamadoEnvio.setText(conecta.rs.getString("IdCHSup"));
            jStatusChamadoEnvio.setText(conecta.rs.getString("StatusCha"));
            jDataChamadoEnvio.setDate(conecta.rs.getDate("DataCha"));
            jAtendenteEnvio.setText(conecta.rs.getString("NomeUsuario"));
            idSolicitante = conecta.rs.getInt("IdSolicitante");
            jSolicitanteEnvio.setText(conecta.rs.getString("NomeSolicitante"));
            jUnidadePrisionalEnvio.setText(conecta.rs.getString("DescricaoUnidade"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void buscarSoftMod() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_SUPORTE "
                    + "INNER JOIN CHAMADOS_SUPORTE "
                    + "ON ITENS_CHAMADOS_SUPORTE.IdCHSup=CHAMADOS_SUPORTE.IdCHSup "
                    + "INNER JOIN SOFTWARE "
                    + "ON ITENS_CHAMADOS_SUPORTE.IdSoftware=SOFTWARE.IdSoftware "
                    + "INNER JOIN MODULOS "
                    + "ON ITENS_CHAMADOS_SUPORTE.IdModulo=MODULOS.IdModulo "
                    + "WHERE ITENS_CHAMADOS_SUPORTE.IdCHSup='" + jIdChamado.getText() + "'");
            conecta.rs.first();
            descricaoSoftware = conecta.rs.getString("DescricaoSoftware");
            descricaoModulo = conecta.rs.getString("DescricaoModulo");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void listarChamadosSuporte() {
        DefaultTableModel dadosOrigem = (DefaultTableModel) jTabelaChamadosSuporte.getModel();
        ChamadoSuporte d = new ChamadoSuporte();
        try {
            for (ChamadoSuporte dd : listarChamadosSup.read()) {
                jtotalRegistrosSuporte.setText(Integer.toString(qtdChamados)); // Converter inteiro em string para exibir na tela 
                dadosOrigem.addRow(new Object[]{dd.getIdItemCh(), dd.getDataItemCh(), dd.getHorarioInicio(), dd.getHorarioTermino(), dd.getTextoSuporte()});
                // BARRA DE ROLAGEM HORIZONTAL
                jTabelaChamadosSuporte.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                // ALINHAR TEXTO DA TABELA CENTRALIZADO
                DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
                centralizado.setHorizontalAlignment(SwingConstants.CENTER);
                //
                jTabelaChamadosSuporte.getColumnModel().getColumn(0).setCellRenderer(centralizado);
                jTabelaChamadosSuporte.getColumnModel().getColumn(1).setCellRenderer(centralizado);
                jTabelaChamadosSuporte.getColumnModel().getColumn(2).setCellRenderer(centralizado);
                jTabelaChamadosSuporte.getColumnModel().getColumn(3).setCellRenderer(centralizado);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaEnvioChamadoSuporteDesenvolvimento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void gravarChamadosDesenvolvimento() {
        //GRAVAR NA TABELA CHAMADOS_DESENVOLVIMENTO
        objCHSup.setStatusCha(statusEnvio);
        // GRAVAR NA TABELA ITENS_CHAMADOS_DESENVOLVIMENTO                    
        for (int i = 0; i < jTabelaChamadosDesenvolvimento.getRowCount(); i++) {
            objCHSup.setUsuarioInsert(nameUser);
            objCHSup.setDataInsert(dataModFinal);
            objCHSup.setHorarioInsert(horaMov);
            //
            objCHSup.setIdCHSup(Integer.valueOf(jIdChamadoEnvio.getText()));
            objCHSup.setDescricaoSoftware(descricaoSoftware);
            objCHSup.setDescricaoModulo(descricaoModulo);
            objCHSup.setIdItemCh((int) jTabelaChamadosDesenvolvimento.getValueAt(i, 0));
            objCHSup.setDataItemCh((Date) jTabelaChamadosDesenvolvimento.getValueAt(i, 1));
            objCHSup.setHorarioInicio((String) jTabelaChamadosDesenvolvimento.getValueAt(i, 2));
            objCHSup.setHorarioTermino((String) jTabelaChamadosDesenvolvimento.getValueAt(i, 3));
            objCHSup.setTextoSuporte((String) jTabelaChamadosDesenvolvimento.getValueAt(i, 4));
            objCHSup.setUtiliza(utiliza);
            // VERIFICAR SE O INTERNO JÁ SE ENCONTRA GRAVADO NA TABELA PARA PARA O MESMO REGISTRO
            verificarInternoBancoDados(objCHSup.getIdCHSup(), objCHSup.getIdItemCh());
            // SE O REGISTRO FOR IGUAL E O CHAMADO DIFERENTE, GRAVA
            if (objCHSup.getIdCHSup() == codigoRegistro && objCHSup.getIdItemCh() != codigoItem) {
                control.enviarItensSupDes(objCHSup);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                // SE O CODIGO DO REGISTRO FOR ZERO
            } else if (codigoRegistro == 0) {
                control.enviarItensSupDes(objCHSup);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                // SE O CODIGO DO REGISTRO FOR IGUAL E O CÓDIGO DO CHAMADO FOR IGUAL, ALTERA
            } else if (objCHSup.getIdCHSup() == codigoRegistro && objCHSup.getIdItemCh() == codigoItem) {
                control.alterarEnviarItensSupDes(objCHSup);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação 
            } else if (codigoRegistro == 0 && codigoItem == 0) {
                control.enviarItensSupDes(objCHSup);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
            }
        }
    }

    public void verificarInternoBancoDados(int codigoReg, int codItem) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_SUPORTE_DESENVOLVIMENTO "
                    + "WHERE IdCHSup='" + codigoReg + "' "
                    + "AND IdItem='" + codItem + "'");
            conecta.rs.first();
            codigoItem = conecta.rs.getInt("IdItem");
            codigoRegistro = conecta.rs.getInt("IdCHSup");
        } catch (Exception ERROR) {
        }
        conecta.desconecta();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdChamado.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }
}
