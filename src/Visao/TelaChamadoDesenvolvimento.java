/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.ModeloTabela;
import Dao.ChamadosDesenvolvimentoDao;
import Dao.ConexaoBancoDados;
import Dao.LogSistemaDao;
import Modelo.ChamadoSuporte;
import Modelo.LogSistema;
import static Visao.LoginHD.nameUser;
import static Visao.TelaPrincipal.botaoBuscarCH;
import static Visao.TelaPrincipal.botaoEncerrarDes;
import static Visao.TelaPrincipal.botaoEnviarDes;
import static Visao.TelaPrincipal.botaoImprimirDes;
import static Visao.TelaPrincipal.botaoReabrirDes;
import static Visao.TelaPrincipal.codAbrir;
import static Visao.TelaPrincipal.codAlterar;
import static Visao.TelaPrincipal.codConsultar;
import static Visao.TelaPrincipal.codExcluir;
import static Visao.TelaPrincipal.codGravar;
import static Visao.TelaPrincipal.codIncluir;
import static Visao.TelaPrincipal.codUserAcesso;
import static Visao.TelaPrincipal.codigoUser;
import static Visao.TelaPrincipal.jDataSistema;
import static Visao.TelaPrincipal.jHoraSistema;
import static Visao.TelaPrincipal.jPainelPrincipal;
import static Visao.TelaPrincipal.nomeTela;
import static Visao.TelaPrincipal.telaChamadosDesenvolvimento;
import static Visao.TelaPrincipal.telaItensChamadoDesenvolvimento;
import static Visao.TelaPrincipal.tipoServidor;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author ronal
 */
public class TelaChamadoDesenvolvimento extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    ChamadoSuporte objCHSup = new ChamadoSuporte();
    ChamadosDesenvolvimentoDao control = new ChamadosDesenvolvimentoDao();
    //
    LogSistemaDao controlLog = new LogSistemaDao();
    LogSistema objLogSys = new LogSistema();
    // Variáveis para gravar o log
    String nomeModuloTela = "Desenvolvimento:Chamados:Manutenção";
    String statusMov;
    String horaMov;
    String dataModFinal;
    int flag, acao;
    int count;
    int count0;
    int idItemChamadoSup;
    String dataInicial, dataFinal, dataBrasil;
    String dataEntrada;
    //
    public static int idUnidade;
    public static int idEmpresa;
    public static int idSolicitante;
    public static int idSoftware;
    public static int idModulo;
    //
    String statusEncerrado = "ENCERRADO NO DESENVOLVIMENTO";
    String statusReabrir = "REABERTO NO DESENVOLVIMENTO";
    String statusDesenvol = "ENVIADO PARA O SUPORTE TÉCNICO";
    //
    String tipoSuporte = "DESENVOLVIMENTO";
    //
    String nomeAtendente = "";
    //
    String idRegChamadoDesc;
    String idItemChamadoDesc;
    String utilizado = "Sim";
    int idItemCHSup;
    int nivelUsuario = 0;
    //
    public static String codigoChamadoSuporte = null;

    /**
     * Creates new form TelaChamadoSuporte
     */
    public static TelaPesquisaSolicitanteCHD pesqSoli;
    public static TelaPesquisaSoftwareModuloD pesqSM;
    public static TelaBuscarChamadosSuporte buscaCH;

    public TelaChamadoDesenvolvimento() {
        initComponents();
        formatarCampos();
        corCampos();
    }

    public void mostrarPesquisa() {
        pesqSoli = new TelaPesquisaSolicitanteCHD(this, true);
        pesqSoli.setVisible(true);
    }

    public void mostrarPesquisaSoft() {
        pesqSM = new TelaPesquisaSoftwareModuloD(this, true);
        pesqSM.setVisible(true);
    }

    public void mostrarBuscaCH() {
        buscaCH = new TelaBuscarChamadosSuporte(this, true);
        buscaCH.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaChamdosSup = new javax.swing.JTable();
        jPanel31 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jIdChamadoPesquisa = new javax.swing.JTextField();
        jBtPesqCHCodigo = new javax.swing.JButton();
        jCheckBoxTodosCH = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jPesqSolicitante = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jDataPesqInicial = new com.toedter.calendar.JDateChooser();
        jDataPesFinal = new com.toedter.calendar.JDateChooser();
        jBtPesqCHData = new javax.swing.JButton();
        jBtSolicitante = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jBtEncerrar = new javax.swing.JButton();
        jBtImprimir = new javax.swing.JButton();
        jBtEnviar = new javax.swing.JButton();
        jBtReabrir = new javax.swing.JButton();
        jBtDownLoadChamados = new javax.swing.JButton();
        jBtAuditoriaItem = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtAuditoria = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDataChamado = new com.toedter.calendar.JDateChooser();
        jIdChamado = new javax.swing.JTextField();
        jStatusChamado = new javax.swing.JTextField();
        jAtendente = new javax.swing.JTextField();
        jSolicitante = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jUnidadePrisional = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jBtPesquisaSoli = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jAssunto = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jHorarioInicio = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jHorarioTermino = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDataOcorrencia = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jIdItem = new javax.swing.JTextField();
        jSoftware = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jModulo = new javax.swing.JTextField();
        jBtPesquisaModulo = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jBtSalvarItem = new javax.swing.JButton();
        jBtCancelarItem = new javax.swing.JButton();
        jBtAlterarItem = new javax.swing.JButton();
        jBtNovoItem = new javax.swing.JButton();
        jBtExcluirItem = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextoDesenvolvimento = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jDataOcorrenciaSup = new com.toedter.calendar.JDateChooser();
        jIdItemSup = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jHorarioInicioSup = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jHorarioTerminoSup = new javax.swing.JFormattedTextField();
        jSoftwareSup = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jModuloSup = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextoSuporte = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaItens = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Chamados do Desenvolvimento :::...");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/HelpDeskMas_16.png"))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTabelaChamdosSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaChamdosSup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Solicitante", "Unidade Prisional"
            }
        ));
        jTabelaChamdosSup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaChamdosSupMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaChamdosSup);
        if (jTabelaChamdosSup.getColumnModel().getColumnCount() > 0) {
            jTabelaChamdosSup.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaChamdosSup.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaChamdosSup.getColumnModel().getColumn(1).setMinWidth(80);
            jTabelaChamdosSup.getColumnModel().getColumn(1).setMaxWidth(80);
            jTabelaChamdosSup.getColumnModel().getColumn(2).setMinWidth(200);
            jTabelaChamdosSup.getColumnModel().getColumn(2).setMaxWidth(200);
            jTabelaChamdosSup.getColumnModel().getColumn(3).setMinWidth(300);
            jTabelaChamdosSup.getColumnModel().getColumn(3).setMaxWidth(300);
            jTabelaChamdosSup.getColumnModel().getColumn(4).setMinWidth(300);
            jTabelaChamdosSup.getColumnModel().getColumn(4).setMaxWidth(300);
        }

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel63.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel63))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel63)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Código:");

        jIdChamadoPesquisa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdChamadoPesquisa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCHCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCHCodigo.setToolTipText("Pesquisa de Chamados por Código");
        jBtPesqCHCodigo.setContentAreaFilled(false);
        jBtPesqCHCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCHCodigoActionPerformed(evt);
            }
        });

        jCheckBoxTodosCH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxTodosCH.setText("Todos");
        jCheckBoxTodosCH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxTodosCHItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Solicitante:");

        jPesqSolicitante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Data Inicial:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Data Final:");

        jDataPesqInicial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jDataPesFinal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jBtPesqCHData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesqCHData.setContentAreaFilled(false);
        jBtPesqCHData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesqCHDataActionPerformed(evt);
            }
        });

        jBtSolicitante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtSolicitante.setContentAreaFilled(false);
        jBtSolicitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSolicitanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesqCHData, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(jIdChamadoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtPesqCHCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(427, 427, 427)
                            .addComponent(jCheckBoxTodosCH))
                        .addGroup(jPanel10Layout.createSequentialGroup()
                            .addComponent(jPesqSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(jIdChamadoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesqCHCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxTodosCH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel15)
                        .addComponent(jDataPesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(jBtPesqCHData, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDataPesqInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPesqSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtPesqCHCodigo, jIdChamadoPesquisa});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel3);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jBtEncerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/061218140238_16.png"))); // NOI18N
        jBtEncerrar.setText("Encerrar");
        jBtEncerrar.setToolTipText("Encerrar Chamado");
        jBtEncerrar.setEnabled(false);
        jBtEncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEncerrarActionPerformed(evt);
            }
        });

        jBtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/gtklp-icone-3770-16.png"))); // NOI18N
        jBtImprimir.setText("Imprimir");
        jBtImprimir.setToolTipText("Imprimir Chamado");
        jBtImprimir.setEnabled(false);
        jBtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtImprimirActionPerformed(evt);
            }
        });

        jBtEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/40_16x16.png"))); // NOI18N
        jBtEnviar.setText("Enviar");
        jBtEnviar.setToolTipText("Enviar para Desenvolvimento");
        jBtEnviar.setEnabled(false);
        jBtEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEnviarActionPerformed(evt);
            }
        });

        jBtReabrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/fileopen.png"))); // NOI18N
        jBtReabrir.setText("Reabrir");
        jBtReabrir.setToolTipText("Reabrir Chamado");
        jBtReabrir.setEnabled(false);
        jBtReabrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtReabrirActionPerformed(evt);
            }
        });

        jBtDownLoadChamados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Download-16.png"))); // NOI18N
        jBtDownLoadChamados.setText("Importar");
        jBtDownLoadChamados.setToolTipText("Importar Chamados do Suporte Técnico");
        jBtDownLoadChamados.setEnabled(false);
        jBtDownLoadChamados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtDownLoadChamadosActionPerformed(evt);
            }
        });

        jBtAuditoriaItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/book_open.png"))); // NOI18N
        jBtAuditoriaItem.setToolTipText("Auditoria");
        jBtAuditoriaItem.setContentAreaFilled(false);
        jBtAuditoriaItem.setEnabled(false);
        jBtAuditoriaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaItemActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/shutdown-icone-6920-16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtReabrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtDownLoadChamados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addComponent(jBtAuditoriaItem, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtEncerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtDownLoadChamados, jBtEncerrar, jBtEnviar, jBtImprimir, jBtReabrir, jBtSair});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jBtEncerrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jBtImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtEnviar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtReabrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtDownLoadChamados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAuditoriaItem, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtSair)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/191216104515_16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setEnabled(false);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setEnabled(false);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtAuditoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/book_open.png"))); // NOI18N
        jBtAuditoria.setToolTipText("Auditoria");
        jBtAuditoria.setContentAreaFilled(false);
        jBtAuditoria.setEnabled(false);
        jBtAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtNovo)
                            .addComponent(jBtExcluir)
                            .addComponent(jBtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtCancelar)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jBtAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtAlterar, jBtCancelar, jBtExcluir, jBtNovo, jBtSalvar});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jBtAuditoria)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Data Chamado");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Atendente");

        jDataChamado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataChamado.setEnabled(false);

        jIdChamado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdChamado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdChamado.setEnabled(false);

        jStatusChamado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jStatusChamado.setForeground(new java.awt.Color(204, 0, 0));
        jStatusChamado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jStatusChamado.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        jStatusChamado.setEnabled(false);

        jAtendente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAtendente.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jAtendente.setEnabled(false);

        jSolicitante.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSolicitante.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Solicitante");

        jUnidadePrisional.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jUnidadePrisional.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Unidade Prisional");

        jBtPesquisaSoli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisaSoli.setContentAreaFilled(false);
        jBtPesquisaSoli.setEnabled(false);
        jBtPesquisaSoli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaSoliActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("Assunto");

        jAssunto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jAssunto.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jIdChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jStatusChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDataChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 162, Short.MAX_VALUE))
                            .addComponent(jAtendente)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jAssunto)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jUnidadePrisional, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtPesquisaSoli, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataChamado, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jStatusChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jUnidadePrisional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtPesquisaSoli))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel23)
                        .addGap(3, 3, 3)
                        .addComponent(jAssunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));
        jTabbedPane2.setForeground(new java.awt.Color(0, 102, 0));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jHorarioInicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioInicio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioInicio.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jHorarioInicio.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Horário Inicio");

        jHorarioTermino.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioTermino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioTermino.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jHorarioTermino.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Horário Termino");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Ocorrência");

        jDataOcorrencia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataOcorrencia.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Código");

        jIdItem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdItem.setEnabled(false);

        jSoftware.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSoftware.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Software");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Módulo");

        jModulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jModulo.setEnabled(false);

        jBtPesquisaModulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisaModulo.setContentAreaFilled(false);
        jBtPesquisaModulo.setEnabled(false);
        jBtPesquisaModulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisaModuloActionPerformed(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jBtSalvarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarItem.setToolTipText("Gravar");
        jBtSalvarItem.setEnabled(false);
        jBtSalvarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarItemActionPerformed(evt);
            }
        });

        jBtCancelarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarItem.setToolTipText("Cancelar");
        jBtCancelarItem.setEnabled(false);
        jBtCancelarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarItemActionPerformed(evt);
            }
        });

        jBtAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarItem.setToolTipText("Alterar");
        jBtAlterarItem.setEnabled(false);
        jBtAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarItemActionPerformed(evt);
            }
        });

        jBtNovoItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_add.png"))); // NOI18N
        jBtNovoItem.setToolTipText("Novo");
        jBtNovoItem.setEnabled(false);
        jBtNovoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoItemActionPerformed(evt);
            }
        });

        jBtExcluirItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirItem.setToolTipText("Excluir");
        jBtExcluirItem.setEnabled(false);
        jBtExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtNovoItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBtNovoItem)
                    .addComponent(jBtAlterarItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtExcluirItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtSalvarItem)
                    .addComponent(jBtCancelarItem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTextoDesenvolvimento.setColumns(20);
        jTextoDesenvolvimento.setRows(5);
        jTextoDesenvolvimento.setEnabled(false);
        jScrollPane3.setViewportView(jTextoDesenvolvimento);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSoftware))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jModulo, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtPesquisaModulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jIdItem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jDataOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jHorarioInicio)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel16))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jHorarioTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHorarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDataOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdItem, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(9, 9, 9)
                                .addComponent(jSoftware, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(9, 9, 9)
                                .addComponent(jModulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtPesquisaModulo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Texto do Desenvolvimento", new javax.swing.ImageIcon(getClass().getResource("/Imagens/HelpDeskMas_16.png")), jPanel6); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jDataOcorrenciaSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataOcorrenciaSup.setEnabled(false);

        jIdItemSup.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdItemSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdItemSup.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Código");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Data Ocorrência");

        jHorarioInicioSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioInicioSup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioInicioSup.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jHorarioInicioSup.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Horário Inicio");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Horário Termino");

        jHorarioTerminoSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jHorarioTerminoSup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jHorarioTerminoSup.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jHorarioTerminoSup.setEnabled(false);

        jSoftwareSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSoftwareSup.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Software");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Módulo");

        jModuloSup.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jModuloSup.setEnabled(false);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTextoSuporte.setColumns(20);
        jTextoSuporte.setRows(5);
        jTextoSuporte.setEnabled(false);
        jScrollPane2.setViewportView(jTextoSuporte);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jIdItemSup, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jDataOcorrenciaSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jHorarioInicioSup)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jHorarioTerminoSup, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jSoftwareSup, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jModuloSup, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(9, 9, 9)
                        .addComponent(jModuloSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jIdItemSup, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDataOcorrenciaSup, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jHorarioInicioSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jHorarioTerminoSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addGap(9, 9, 9)
                        .addComponent(jSoftwareSup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Texto do Suporte", new javax.swing.ImageIcon(getClass().getResource("/Imagens/HelpDeskFem_16.png")), jPanel7); // NOI18N

        jTabelaItens.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Hora Inicial", "Hora Termino", "Texto Chamado"
            }
        ));
        jTabelaItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaItensMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaItens);
        if (jTabelaItens.getColumnModel().getColumnCount() > 0) {
            jTabelaItens.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaItens.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaItens.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaItens.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaItens.getColumnModel().getColumn(2).setMinWidth(80);
            jTabelaItens.getColumnModel().getColumn(2).setMaxWidth(80);
            jTabelaItens.getColumnModel().getColumn(3).setMinWidth(80);
            jTabelaItens.getColumnModel().getColumn(3).setMaxWidth(80);
            jTabelaItens.getColumnModel().getColumn(4).setMinWidth(550);
            jTabelaItens.getColumnModel().getColumn(4).setMaxWidth(550);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel8, jPanel9});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel2, jScrollPane4, jTabbedPane2});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Manutenção", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(250, 5, 791, 537);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtPesqCHCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCHCodigoActionPerformed
        // TODO add your handling code here:
        nomeAtendente = nameUser;
        count = 0;
        flag = 1;
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
            if (jIdChamadoPesquisa.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o código para pesquisa.");
            } else {
                preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "WHERE CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamadoPesquisa.getText() + "'");
            }
        } else {
            if (jIdChamadoPesquisa.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o código para pesquisa.");
            } else {
                preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "WHERE CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamadoPesquisa.getText() + "' "
                        + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
            }
        }
    }//GEN-LAST:event_jBtPesqCHCodigoActionPerformed

    private void jBtPesqCHDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesqCHDataActionPerformed
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        nomeAtendente = nameUser;
        if (tipoServidor == null || tipoServidor.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É necessário definir o parâmtero para o sistema operacional utilizado no servidor, (UBUNTU-LINUX ou WINDOWS SERVER).");
        } else if (tipoServidor.equals("Servidor Linux (Ubuntu)/MS-SQL Server")) {
            if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                if (jDataPesqInicial.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                    jDataPesqInicial.requestFocus();
                } else {
                    if (jDataPesFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                        jDataPesFinal.requestFocus();
                    } else {
                        if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                        } else {
                            SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                            dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                            dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                            preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                                    + "INNER JOIN USUARIOS "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                                    + "INNER JOIN SOLICITANTES "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante  "
                                    + "WHERE DataCha BETWEEN'" + dataInicial + "' "
                                    + "AND '" + dataFinal + "'");
                        }
                    }
                }
            } else {
                if (jDataPesqInicial.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                    jDataPesqInicial.requestFocus();
                } else {
                    if (jDataPesFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                        jDataPesFinal.requestFocus();
                    } else {
                        if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                        } else {
                            SimpleDateFormat formatoAmerica = new SimpleDateFormat("yyyy/MM/dd");
                            dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                            dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                            preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                                    + "INNER JOIN USUARIOS "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                                    + "INNER JOIN SOLICITANTES "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante  "
                                    + "WHERE DataCha BETWEEN'" + dataInicial + "' "
                                    + "AND '" + dataFinal + "' "
                                    + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
                        }
                    }
                }
            }
        } else if (tipoServidor.equals("Servidor Windows/MS-SQL Server")) {
            if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                if (jDataPesqInicial.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                    jDataPesqInicial.requestFocus();
                } else {
                    if (jDataPesFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                        jDataPesFinal.requestFocus();
                    } else {
                        if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                        } else {
                            SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                            dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                            dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                            preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                                    + "INNER JOIN USUARIOS "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                                    + "INNER JOIN SOLICITANTES "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante  "
                                    + "WHERE DataCha BETWEEN'" + dataInicial + "' "
                                    + "AND '" + dataFinal + "'");
                        }
                    }
                }
            } else {
                if (jDataPesqInicial.getDate() == null) {
                    JOptionPane.showMessageDialog(rootPane, "Informe a data inicial para pesquisa.");
                    jDataPesqInicial.requestFocus();
                } else {
                    if (jDataPesFinal.getDate() == null) {
                        JOptionPane.showMessageDialog(rootPane, "Informe a data final para pesquisa.");
                        jDataPesFinal.requestFocus();
                    } else {
                        if (jDataPesqInicial.getDate().after(jDataPesFinal.getDate())) {
                            JOptionPane.showMessageDialog(rootPane, "Data Inicial não pode ser maior que data final");
                        } else {
                            SimpleDateFormat formatoAmerica = new SimpleDateFormat("dd/MM/yyyy");
                            dataInicial = formatoAmerica.format(jDataPesqInicial.getDate().getTime());
                            dataFinal = formatoAmerica.format(jDataPesFinal.getDate().getTime());
                            preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                                    + "INNER JOIN USUARIOS "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                                    + "INNER JOIN SOLICITANTES "
                                    + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante  "
                                    + "WHERE DataCha BETWEEN'" + dataInicial + "' "
                                    + "AND '" + dataFinal + "' "
                                    + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jBtPesqCHDataActionPerformed

    private void jBtSolicitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSolicitanteActionPerformed
        // TODO add your handling code here:
        count = 0;
        nomeAtendente = nameUser;
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
            if (jPesqSolicitante.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
            } else {
                preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "WHERE SOLICITANTES.NomeSolicitante LIKE'%" + jPesqSolicitante.getText() + "%'");
            }
        } else {
            if (jPesqSolicitante.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "É necessário informar um nome ou parte do nome para pesquuisa.");
            } else {
                preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "WHERE SOLICITANTES.NomeSolicitante LIKE'%" + jPesqSolicitante.getText() + "%' "
                        + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
            }
        }
    }//GEN-LAST:event_jBtSolicitanteActionPerformed

    private void jCheckBoxTodosCHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxTodosCHItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        nomeAtendente = nameUser;
        buscarNivelUsuario();
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || nivelUsuario == 0) {
            if (evt.getStateChange() == evt.SELECTED) {
                this.preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante");
            } else {
                jtotalRegistros.setText("");
                limparTabelaFornecedor();
            }
        } else {
            if (evt.getStateChange() == evt.SELECTED) {
                this.preencherTabelaChamados("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "AND USUARIOS.NomeUsuario='" + nomeAtendente + "'");
            } else {
                jtotalRegistros.setText("");
                limparTabelaFornecedor();
            }
        }
    }//GEN-LAST:event_jCheckBoxTodosCHItemStateChanged

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaChamadosDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaChamadosDesenvolvimento) && codIncluir == 1) {
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 1;
            Novo();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaChamadosDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaChamadosDesenvolvimento) && codAlterar == 1) {
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro. Registro já encerrado...");
            } else {
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                acao = 2;
                Alterar();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaChamadosDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaChamadosDesenvolvimento) && codExcluir == 1) {
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível excluir esse registro. Registro já encerrado...");
            } else {
                statusMov = "Excluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objCHSup.setIdSolicitante(Integer.valueOf(jIdChamado.getText()));
                    control.excluirChamadoDesc(objCHSup);
                    Excluir();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaChamadosDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaChamadosDesenvolvimento) && codIncluir == 1) {
            if (jDataChamado.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do chamado.");
            } else if (jUnidadePrisional.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a unidade prisional.");
            } else if (jSolicitante.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o solicitante.");
            } else if (jAssunto.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o assunto do chamado.");
            } else {
                objCHSup.setStatusCha(jStatusChamado.getText());
                objCHSup.setDataCha(jDataChamado.getDate());
                objCHSup.setNomeUsuario(jAtendente.getText());
                objCHSup.setIdSolicitante(idSolicitante);
                objCHSup.setNomeSolicitante(jSolicitante.getText());
                objCHSup.setDescricaoUnidade(jUnidadePrisional.getText());
                objCHSup.setAssunto(jAssunto.getText());
                if (acao == 1) {
                    objCHSup.setUsuarioInsert(nameUser);
                    objCHSup.setDataInsert(dataModFinal);
                    objCHSup.setHorarioInsert(horaMov);
                    control.incluirChamadoDes(objCHSup);
                    jHorarioTermino.setText(objCHSup.getHorarioTermino());
                    buscarCodigo();
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
                if (acao == 2) {
                    objCHSup.setUsuarioUp(nameUser);
                    objCHSup.setDataUp(dataModFinal);
                    objCHSup.setHorarioUp(horaMov);
                    objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                    control.alterarChamadoDes(objCHSup);
                    //
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    Salvar();
                    JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jBtEncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEncerrarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(botaoEncerrarDes);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(botaoEncerrarDes) && codAbrir == 1) {
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro. Registro já encerrado...");
            } else {
                if (jTextoSuporte.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Não é possível encerrar o chamado sem um texto explicativo.");
                } else {
                    bloquearBotoes();
                    bloquearCampos();
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente encerrar registro selecionado?", "Confirmação",
                            JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {
                        objCHSup.setStatusCha(statusEncerrado);
                        objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                        control.encerrarChamadoDes(objCHSup);
                        jStatusChamado.setText(statusEncerrado);
                        JOptionPane.showMessageDialog(rootPane, "Registro encerrado com sucesso.");
                        //
                        jBtNovo.setEnabled(true);
                        jBtAuditoria.setEnabled(true);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtEncerrarActionPerformed

    private void jBtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtImprimirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(botaoImprimirDes);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(botaoImprimirDes) && codAbrir == 1) {
            if (jIdChamado.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Não existe registro a ser impresso, selecione um registro antes de imprimir.");
            } else {
                relatorioChamadosST();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtImprimirActionPerformed

    private void jBtEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEnviarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(botaoEnviarDes);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(botaoEnviarDes) && codAbrir == 1) {
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível modificar esse registro.Registro já encerrado...");
            } else {
                bloquearBotoes();
                bloquearCampos();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente enviar para o desenvolvimento o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objCHSup.setStatusCha(statusDesenvol);
                    objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                    control.encerrarChamadoDes(objCHSup);
                    jStatusChamado.setText(statusDesenvol);
                    JOptionPane.showMessageDialog(rootPane, "Registro encerrado com sucesso.");
                    //
                    jBtNovo.setEnabled(true);
                    jBtAlterar.setEnabled(true);
                    jBtExcluir.setEnabled(true);
                    //
                    jBtEncerrar.setEnabled(true);
                    jBtImprimir.setEnabled(true);
                    jBtEnviar.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtEnviarActionPerformed

    private void jBtReabrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtReabrirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(botaoReabrirDes);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(botaoReabrirDes) && codAbrir == 1) {
            if (!jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Registro não se encontra encerrado.");
            } else if (jStatusChamado.getText().equals(statusDesenvol)) {
                JOptionPane.showMessageDialog(rootPane, "Registro não pode ser reaberto, o mesmo encontra-se no desenvolvimento.");
            } else {
                bloquearBotoes();
                bloquearCampos();
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente reabrir o registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objCHSup.setStatusCha(statusReabrir);
                    objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                    control.encerrarChamadoDes(objCHSup);
                    jStatusChamado.setText(statusReabrir);
                    JOptionPane.showMessageDialog(rootPane, "Registro encerrado com sucesso.");
                    //
                    jBtNovo.setEnabled(true);
                    jBtAlterar.setEnabled(true);
                    jBtExcluir.setEnabled(true);
                    //
                    jBtEncerrar.setEnabled(true);
                    jBtImprimir.setEnabled(true);
                    jBtEnviar.setEnabled(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtReabrirActionPerformed

    private void jBtAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaCHDesenvolvimento objCHSup = new TelaAuditoriaCHDesenvolvimento();
        jPainelPrincipal.add(objCHSup);
        objCHSup.show();
    }//GEN-LAST:event_jBtAuditoriaActionPerformed

    private void jTabelaChamdosSupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaChamdosSupMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idSoli = "" + jTabelaChamdosSup.getValueAt(jTabelaChamdosSup.getSelectedRow(), 0);
            jIdChamadoPesquisa.setText(idSoli);
            //            
            if (!jIdChamado.getText().equals("")) {
                limparTodosCampos();
                bloquearCampos();
                bloquearBotoes();
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(true);
                jBtExcluir.setEnabled(true);
                jBtAuditoria.setEnabled(true);
                //
                jBtEncerrar.setEnabled(true);
                jBtImprimir.setEnabled(true);
                jBtEnviar.setEnabled(true);
                jBtReabrir.setEnabled(true);
                //
                jBtNovoItem.setEnabled(true);
            }
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN USUARIOS "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                        + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                        + "INNER JOIN SOLICITANTES "
                        + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                        + "WHERE CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + idSoli + "'");
                conecta.rs.first();
                jIdChamado.setText(String.valueOf(conecta.rs.getInt("IdCHDes")));
                jStatusChamado.setText(conecta.rs.getString("StatusCha"));
                jDataChamado.setDate(conecta.rs.getDate("DataCha"));
                jAtendente.setText(conecta.rs.getString("NomeUsuario"));
                idSolicitante = conecta.rs.getInt("IdSolicitante");
                jSolicitante.setText(conecta.rs.getString("NomeSolicitante"));
                idUnidade = conecta.rs.getInt("IdUnidEmp");
                jUnidadePrisional.setText(conecta.rs.getString("DescricaoUnidade"));
                jAssunto.setText(conecta.rs.getString("AssuntoDesenvolvimento"));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERROR: " + e);
            }
            preencherTabelaItensChamados("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                    + "INNER JOIN CHAMADOS_DESENVOLVIMENTO "
                    + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes=CHAMADOS_DESENVOLVIMENTO.IdCHDes "
                    + "WHERE ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamado.getText() + "'");
            conecta.desconecta();
        }
    }//GEN-LAST:event_jTabelaChamdosSupMouseClicked

    private void jBtDownLoadChamadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtDownLoadChamadosActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(botaoBuscarCH);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(botaoBuscarCH) && codAbrir == 1) {
            mostrarBuscaCH();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtDownLoadChamadosActionPerformed

    private void jBtPesquisaSoliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaSoliActionPerformed
        // TODO add your handling code here:
        mostrarPesquisa();
    }//GEN-LAST:event_jBtPesquisaSoliActionPerformed

    private void jBtPesquisaModuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisaModuloActionPerformed
        // TODO add your handling code here:
        mostrarPesquisaSoft();
    }//GEN-LAST:event_jBtPesquisaModuloActionPerformed

    private void jBtSalvarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaItensChamadoDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaItensChamadoDesenvolvimento) && codGravar == 1) {
            if (jDataOcorrencia.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data do chamado.");
            } else if (jHorarioInicio.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o horário de inicio do chamado.");
            } else if (jSoftware.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe do software(sistema).");
            } else if (jModulo.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome do módulo.");
            } else {
                objCHSup.setIdItemDes(Integer.valueOf(jIdItem.getText()));
                objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                objCHSup.setIdCHDes(Integer.valueOf(jIdChamado.getText()));
                objCHSup.setDataItemCh(jDataOcorrencia.getDate());
                objCHSup.setDescricaoSoftware(jSoftware.getText());
                objCHSup.setDescricaoModulo(jModulo.getText());
                objCHSup.setTextoSuporte(jTextoSuporte.getText());
                objCHSup.setTextoDesenvol(jTextoDesenvolvimento.getText());
                objCHSup.setTipoChamado(tipoSuporte);
                objCHSup.setHorarioInicio(jHorarioInicio.getText());
                if (acao == 3) {
                    objCHSup.setUsuarioInsert(nameUser);
                    objCHSup.setDataInsert(dataModFinal);
                    objCHSup.setHorarioInsert(horaMov);
                    if (jAtendente.getText().equals("ADMINISTRADOR DO SISTEMA")) {
                        jHorarioTermino.setEnabled(true);
                        objCHSup.setHorarioTermino(jHorarioTermino.getText());
                    } else {
                        objCHSup.setHorarioTermino(jHoraSistema.getText());
                    }
                    control.incluirItensSupDes(objCHSup);
                    jHorarioTermino.setText(objCHSup.getHorarioTermino());
                    buscarCodigoItem();
                    verificarGravacaoItem();
                    if (jIdChamado.getText().equals(idRegChamadoDesc) && jIdItem.getText().equals(idItemChamadoDesc)) {
                        //RESPONDE "Sim" AO CAMPO Utilizao DA TABELA ITENS_CHAMADOS_SUPORTE_DESENVOLVIMENTO
                        objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                        objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                        objCHSup.setUtiliza(utilizado);
                        control.repostaItensSupDes(objCHSup);
                        //ATUALIZAR ATENDIMENTO DA TABELA ITENS_CHAMADOS_SUPORTE
                        objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                        objCHSup.setTextoDesenvol(jTextoDesenvolvimento.getText());
                        control.atualizatTextoItensSuporte(objCHSup);
                        //
                        objLog1();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Salvar();
                        preencherTabelaItensChamados("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                                + "INNER JOIN CHAMADOS_DESENVOLVIMENTO "
                                + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes=CHAMADOS_DESENVOLVIMENTO.IdCHDes "
                                + "WHERE ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamado.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
                }
                if (acao == 4) {
                    objCHSup.setUsuarioUp(nameUser);
                    objCHSup.setDataUp(dataModFinal);
                    objCHSup.setHorarioUp(horaMov);
                    if (jAtendente.getText().equals("ADMINISTRADOR DO SISTEMA")) {
                        jHorarioTermino.setEnabled(true);
                        objCHSup.setHorarioTermino(jHorarioTermino.getText());
                    } else {
                        objCHSup.setHorarioTermino(jHoraSistema.getText());
                    }
                    objCHSup.setIdItemDes(Integer.valueOf(jIdItem.getText()));
                    control.alterarItensSupDes(objCHSup);
                    jHorarioTermino.setText(objCHSup.getHorarioTermino());
                    verificarGravacaoItem();
                    if (jIdChamado.getText().equals(idRegChamadoDesc) && jIdItem.getText().equals(idItemChamadoDesc)) {
                        //RESPONDE "Sim" AO CAMPO Utilizao DA TABELA ITENS_CHAMADOS_SUPORTE_DESENVOLVIMENTO
                        objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                        objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                        objCHSup.setUtiliza(utilizado);
                        control.repostaItensSupDes(objCHSup);
                        //ATUALIZAR ATENDIMENTO DA TABELA ITENS_CHAMADOS_SUPORTE
                        objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                        objCHSup.setTextoDesenvol(jTextoDesenvolvimento.getText());
                        control.atualizatTextoItensSuporte(objCHSup);
                        //
                        objLog1();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        Salvar();
                        preencherTabelaItensChamados("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                                + "INNER JOIN CHAMADOS_DESENVOLVIMENTO "
                                + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes=CHAMADOS_DESENVOLVIMENTO.IdCHDes "
                                + "WHERE ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamado.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Registro gravado com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Não foi possível gravar o registro, tente novamente.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarItemActionPerformed

    private void jBtCancelarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarItemActionPerformed
        // TODO add your handling code here:
        CancelarItem();
    }//GEN-LAST:event_jBtCancelarItemActionPerformed

    private void jBtAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaItensChamadoDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaItensChamadoDesenvolvimento) && codAlterar == 1) {
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível alterar o registro, o mesmo já foi encerrado.");
            } else if (jStatusChamado.getText().equals(statusDesenvol)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível alterar o registro, o mesmo já foi enviado para o desenvolvimento.");
            } else {
                Integer rows = jTabelaItens.getRowCount();
                if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                    acao = 4;
                    alterarAdm();
                } else {
                    statusMov = "Alterou";
                    horaMov = jHoraSistema.getText();
                    dataModFinal = jDataSistema.getText();
                    acao = 4;
                    AlterarItem();
                }
                if (rows != 0) {
                    verificarSofMod();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarItemActionPerformed

    private void jBtNovoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaItensChamadoDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaItensChamadoDesenvolvimento) && codIncluir == 1) {
            Integer rows = jTabelaItens.getRowCount();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            acao = 3;
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível alterar o registro, o mesmo já foi encerrado.");
            } else {
                if (nameUser.equals("ADMINISTRADOR DO SISTEMA")) {
                    NovoItem();
                    alterarAdm();
                } else {
                    NovoItem();
                }
                if (rows != 0) {
                    verificarSofMod();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoItemActionPerformed

    private void jBtExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirItemActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaItensChamadoDesenvolvimento);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaItensChamadoDesenvolvimento) && codExcluir == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            if (jStatusChamado.getText().equals(statusEncerrado)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível excluir o registro, o mesmo já foi encerrado.");
            } else if (jStatusChamado.getText().equals(statusDesenvol)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possível excluir o registro, o mesmo já foi enviado para o desenvolvimento.");
            } else {
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir registro selecionado?", "Confirmação",
                        JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    objCHSup.setIdItemCh(Integer.valueOf(jIdItem.getText()));
                    control.excluirItensSupDes(objCHSup);
                    //RESPONDE "Não" AO CAMPO Utilizao DA TABELA ITENS_CHAMADOS_SUPORTE_DESENVOLVIMENTO
                    utilizado = "Não";
                    objCHSup.setIdCHSup(Integer.valueOf(jIdChamado.getText()));
                    objCHSup.setIdItemCh(Integer.valueOf(jIdItemSup.getText()));
                    objCHSup.setUtiliza(utilizado);
                    control.repostaItensSupDes(objCHSup);
                    //
                    ExcluirItem();
                    preencherTabelaItensChamados("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                            + "INNER JOIN CHAMADOS_DESENVOLVIMENTO "
                            + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes=CHAMADOS_DESENVOLVIMENTO.IdCHDes "
                            + "WHERE ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamado.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Registro excluido com sucesso.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirItemActionPerformed

    private void jTabelaItensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaItensMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String idItem = "" + jTabelaItens.getValueAt(jTabelaItens.getSelectedRow(), 0);
            jIdItem.setText(idItem);
            //
            bloquearCampos();
            bloquearBotoes();
            jBtNovoItem.setEnabled(true);
            jBtAlterarItem.setEnabled(true);
            jBtExcluirItem.setEnabled(true);
            //                jBtAuditoria.setEnabled(true);
            //
            jBtEncerrar.setEnabled(true);
            jBtImprimir.setEnabled(true);
            jBtEnviar.setEnabled(true);
            jBtReabrir.setEnabled(true);
            //
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                        + "INNER JOIN CHAMADOS_DESENVOLVIMENTO "
                        + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdCHDes=CHAMADOS_DESENVOLVIMENTO.IdCHDes "
                        + "INNER JOIN SOFTWARE "
                        + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdSoftware=SOFTWARE.IdSoftware "
                        + "INNER JOIN MODULOS "
                        + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdModulo=MODULOS.IdModulo "
                        + "INNER JOIN ITENS_CHAMADOS_SUPORTE "
                        + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdItem=ITENS_CHAMADOS_SUPORTE.IdItem "
                        + "WHERE ITENS_CHAMADOS_DESENVOLVIMENTO.IdItemDes='" + idItem + "'");
                conecta.rs.first();
                jIdItem.setText(String.valueOf(conecta.rs.getInt("IdItemDes")));
                idItemCHSup = conecta.rs.getInt("IdItem");
                jDataOcorrencia.setDate(conecta.rs.getDate("DataItemCh"));
                jHorarioInicio.setText(conecta.rs.getString("HorarioInicio"));
                jHorarioTermino.setText(conecta.rs.getString("HorarioTermino"));
                jSoftware.setText(conecta.rs.getString("DescricaoSoftware"));
                jModulo.setText(conecta.rs.getString("DescricaoModulo"));
                jTextoDesenvolvimento.setText(conecta.rs.getString("TextoDesenvol"));
                //
                conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_SUPORTE "
                        + "INNER JOIN SOFTWARE "
                        + "ON ITENS_CHAMADOS_SUPORTE.IdSoftware=SOFTWARE.IdSoftware "
                        + "INNER JOIN MODULOS "
                        + "ON ITENS_CHAMADOS_SUPORTE.IdModulo=MODULOS.IdModulo "
                        + "INNER JOIN ITENS_CHAMADOS_DESENVOLVIMENTO "
                        + "ON ITENS_CHAMADOS_SUPORTE.IdItem=ITENS_CHAMADOS_SUPORTE.IdItem "
                        + "WHERE ITENS_CHAMADOS_SUPORTE.IdItem='" + idItemCHSup + "'");
                conecta.rs.first();
                jIdItemSup.setText(String.valueOf(conecta.rs.getInt("IdItem")));
                jDataOcorrenciaSup.setDate(conecta.rs.getDate("DataItemCh"));
                jHorarioInicioSup.setText(conecta.rs.getString("HorarioInicio"));
                jHorarioTerminoSup.setText(conecta.rs.getString("HorarioTermino"));
                jSoftwareSup.setText(conecta.rs.getString("DescricaoSoftware"));
                jModuloSup.setText(conecta.rs.getString("DescricaoModulo"));
                jTextoSuporte.setText(conecta.rs.getString("TextoSuporte"));
            } catch (SQLException e) {
//                JOptionPane.showMessageDialog(rootPane, "ERRO na pesquisa dos dados.\nERROR: " + e);
            }
        }
    }//GEN-LAST:event_jTabelaItensMouseClicked

    private void jBtAuditoriaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAuditoriaItemActionPerformed
        // TODO add your handling code here:
        TelaAuditoriaCHDesenvolvimentoItens objAudItens = new TelaAuditoriaCHDesenvolvimentoItens();
        jPainelPrincipal.add(objAudItens);
        objAudItens.show();
    }//GEN-LAST:event_jBtAuditoriaItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField jAssunto;
    private javax.swing.JTextField jAtendente;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarItem;
    private javax.swing.JButton jBtAuditoria;
    private javax.swing.JButton jBtAuditoriaItem;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarItem;
    private javax.swing.JButton jBtDownLoadChamados;
    private javax.swing.JButton jBtEncerrar;
    private javax.swing.JButton jBtEnviar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirItem;
    private javax.swing.JButton jBtImprimir;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoItem;
    private javax.swing.JButton jBtPesqCHCodigo;
    private javax.swing.JButton jBtPesqCHData;
    private javax.swing.JButton jBtPesquisaModulo;
    private javax.swing.JButton jBtPesquisaSoli;
    private javax.swing.JButton jBtReabrir;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarItem;
    private javax.swing.JButton jBtSolicitante;
    private javax.swing.JCheckBox jCheckBoxTodosCH;
    private com.toedter.calendar.JDateChooser jDataChamado;
    private com.toedter.calendar.JDateChooser jDataOcorrencia;
    public static com.toedter.calendar.JDateChooser jDataOcorrenciaSup;
    private com.toedter.calendar.JDateChooser jDataPesFinal;
    private com.toedter.calendar.JDateChooser jDataPesqInicial;
    private javax.swing.JFormattedTextField jHorarioInicio;
    public static javax.swing.JFormattedTextField jHorarioInicioSup;
    private javax.swing.JFormattedTextField jHorarioTermino;
    public static javax.swing.JFormattedTextField jHorarioTerminoSup;
    public static javax.swing.JTextField jIdChamado;
    private javax.swing.JTextField jIdChamadoPesquisa;
    public static javax.swing.JTextField jIdItem;
    public static javax.swing.JTextField jIdItemSup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JTextField jModulo;
    public static javax.swing.JTextField jModuloSup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jPesqSolicitante;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTextField jSoftware;
    public static javax.swing.JTextField jSoftwareSup;
    public static javax.swing.JTextField jSolicitante;
    public static javax.swing.JTextField jStatusChamado;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTabelaChamdosSup;
    private javax.swing.JTable jTabelaItens;
    private javax.swing.JTextArea jTextoDesenvolvimento;
    public static javax.swing.JTextArea jTextoSuporte;
    public static javax.swing.JTextField jUnidadePrisional;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jTextoSuporte.setLineWrap(true);
        jTextoSuporte.setWrapStyleWord(true);
        //
        jTextoDesenvolvimento.setLineWrap(true);
        jTextoDesenvolvimento.setWrapStyleWord(true);
    }

    public void corCampos() {
        jIdChamado.setBackground(Color.white);
        jStatusChamado.setBackground(Color.white);
        jDataChamado.setBackground(Color.white);
        jSolicitante.setBackground(Color.white);
        jUnidadePrisional.setBackground(Color.white);
        jAssunto.setBackground(Color.white);
        //
        jIdItem.setBackground(Color.white);
        jHorarioInicio.setBackground(Color.white);
        jHorarioTermino.setBackground(Color.white);
        jAtendente.setBackground(Color.white);
        jSoftware.setBackground(Color.white);
        jModulo.setBackground(Color.white);
        jTextoDesenvolvimento.setBackground(Color.white);
        jIdItemSup.setBackground(Color.white);
        jDataOcorrenciaSup.setBackground(Color.white);
        jHorarioInicioSup.setBackground(Color.white);
        jHorarioTerminoSup.setBackground(Color.white);
        jSoftwareSup.setBackground(Color.white);
        jModuloSup.setBackground(Color.white);
        jTextoSuporte.setBackground(Color.white);
    }

    public void bloquearCampos() {
        jIdChamado.setEnabled(!true);
        jStatusChamado.setEnabled(!true);
        jDataChamado.setEnabled(!true);
        jAssunto.setEnabled(!true);
        jIdItem.setEnabled(!true);
        jDataOcorrencia.setEnabled(!true);
        jHorarioInicio.setEnabled(!true);
        jHorarioTermino.setEnabled(!true);
        jAtendente.setEnabled(!true);
        jUnidadePrisional.setEnabled(!true);
        jSoftware.setEnabled(!true);
        jModulo.setEnabled(!true);
        jSolicitante.setEnabled(!true);
        jTextoSuporte.setEnabled(!true);
        jTextoDesenvolvimento.setEnabled(!true);
        jTextoSuporte.setEnabled(!true);
    }

    public void bloquearBotoes() {
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
        jBtAuditoria.setEnabled(!true);
        //
        jBtEncerrar.setEnabled(!true);
        jBtImprimir.setEnabled(!true);
        jBtEnviar.setEnabled(!true);
        jBtReabrir.setEnabled(!true);
        //        
        jBtPesquisaModulo.setEnabled(!true);
        jBtPesquisaSoli.setEnabled(!true);
        jBtDownLoadChamados.setEnabled(!true);
        //
        jBtNovoItem.setEnabled(!true);
        jBtAlterarItem.setEnabled(!true);
        jBtExcluirItem.setEnabled(!true);
        jBtSalvarItem.setEnabled(!true);
        jBtCancelarItem.setEnabled(!true);
    }

    public void limparTodosCampos() {
        jIdChamado.setText("");
        jStatusChamado.setText("");
        jDataChamado.setDate(null);
        jAtendente.setText("");
        jSolicitante.setText("");
        jUnidadePrisional.setText("");
        jAssunto.setText("");
        //
        jIdItem.setText("");
        jDataOcorrencia.setDate(null);
        jHorarioInicio.setText("");
        jHorarioTermino.setText("");
        jSoftware.setText("");
        jModulo.setText("");
        jTextoSuporte.setText("");
        jTextoDesenvolvimento.setText("");
    }

    public void limparCamposItens() {
        jIdItem.setText("");
        jDataOcorrencia.setDate(null);
        jHorarioInicio.setText("");
        jHorarioTermino.setText("");
        jSoftware.setText("");
        jModulo.setText("");
        jTextoSuporte.setText("");
        jTextoDesenvolvimento.setText("");
    }

    public void Novo() {
        limparTodosCampos();
        bloquearCampos();
        bloquearBotoes();
        limparTabelaItens();
        jStatusChamado.setText("ABERTO NO DESENVOLVIMENTO");
        jDataChamado.setCalendar(Calendar.getInstance());
        jAtendente.setText(nameUser);
        jAssunto.setEnabled(true);
        //BOTÕES DE PESQUISA        
        jBtPesquisaSoli.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        bloquearCampos();
        bloquearBotoes();
        //
        jAssunto.setEnabled(true);
        jBtPesquisaSoli.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void alterarAdm() {
        bloquearCampos();
        bloquearBotoes();
        jHorarioInicio.setEnabled(true);
        jHorarioTermino.setEnabled(true);
        jAssunto.setEnabled(true);
        jTextoDesenvolvimento.setEnabled(true);
        //
        jBtPesquisaModulo.setEnabled(true);
        jBtDownLoadChamados.setEnabled(true);
        //
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
    }

    public void Excluir() {
        limparTodosCampos();
        bloquearCampos();
        bloquearBotoes();
        //
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        bloquearCampos();
        bloquearBotoes();
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtAuditoria.setEnabled(true);
        //
        jBtEncerrar.setEnabled(true);
        jBtImprimir.setEnabled(true);
        jBtEnviar.setEnabled(true);
        //
        jBtNovoItem.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdChamado.getText().equals("")) {
            limparTodosCampos();
            bloquearCampos();
            bloquearBotoes();
            //
            jBtNovo.setEnabled(true);
        } else {
            bloquearCampos();
            bloquearBotoes();
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtAuditoria.setEnabled(true);
            //
            jBtEncerrar.setEnabled(true);
            jBtImprimir.setEnabled(true);
            jBtEnviar.setEnabled(true);
            //
            jBtNovoItem.setEnabled(true);
        }
    }

    public void verificarSofMod() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                    + "INNER JOIN SOFTWARE "
                    + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdSoftware=SOFTWARE.IdSoftware "
                    + "INNER JOIN MODULOS "
                    + "ON ITENS_CHAMADOS_DESENVOLVIMENTO.IdModulo=MODULOS.IdModulo "
                    + "WHERE IdCHDes='" + jIdChamado.getText() + "'");
            conecta.rs.first();
            idSoftware = conecta.rs.getInt("IdSoftware");
            jSoftware.setText(conecta.rs.getString("DescricaoSoftware"));
            idModulo = conecta.rs.getInt("IdModulo");
            jModulo.setText(conecta.rs.getString("DescricaoModulo"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void NovoItem() {
        bloquearCampos();
        bloquearBotoes();
        limparCamposItens();
        jDataOcorrencia.setCalendar(Calendar.getInstance());
        jHorarioInicio.setText(jHoraSistema.getText());
        //
        jTextoDesenvolvimento.setEnabled(true);
        //
        jBtPesquisaModulo.setEnabled(true);
        jBtDownLoadChamados.setEnabled(true);
        //
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
    }

    public void AlterarItem() {
        bloquearCampos();
        bloquearBotoes();
        //
        jTextoDesenvolvimento.setEnabled(true);
        //
        jBtPesquisaModulo.setEnabled(true);
        jBtDownLoadChamados.setEnabled(true);
        //
        jBtSalvarItem.setEnabled(true);
        jBtCancelarItem.setEnabled(true);
    }

    public void ExcluirItem() {
        bloquearCampos();
        bloquearBotoes();
        limparCamposItens();
        //
        jBtNovoItem.setEnabled(true);
    }

    public void SalvarItem() {
        bloquearCampos();
        bloquearBotoes();
        limparCamposItens();
        //
        jBtNovoItem.setEnabled(true);
    }

    public void CancelarItem() {
        bloquearCampos();
        bloquearBotoes();
        limparCamposItens();
        //
        jBtNovoItem.setEnabled(true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
        jBtAuditoria.setEnabled(true);
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM CHAMADOS_DESENVOLVIMENTO");
            conecta.rs.last();
            jIdChamado.setText(conecta.rs.getString("IdCHDes"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void buscarCodigoItem() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO");
            conecta.rs.last();
            idItemChamadoSup = conecta.rs.getInt("IdItem");
            jIdItem.setText(conecta.rs.getString("IdItemDes"));
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void verificarGravacaoItem() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM ITENS_CHAMADOS_DESENVOLVIMENTO "
                    + "WHERE IdCHDes='" + jIdChamado.getText() + "' "
                    + "AND IdItemDes='" + jIdItem.getText() + "'");
            conecta.rs.first();
            idRegChamadoDesc = conecta.rs.getString("IdCHDes");
            idItemChamadoDesc = conecta.rs.getString("IdItemDes");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void relatorioChamadosST() {
        try {
            conecta.abrirConexao();
            String path = "reports/relatorioChamadoDesenvolvimento.jasper";
            conecta.executaSQL("SELECT * FROM CHAMADOS_DESENVOLVIMENTO "
                    + "INNER JOIN USUARIOS "
                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUsuario=USUARIOS.IdUsuario "
                    + "INNER JOIN UNIDADE_PENAL_EMPRESA "
                    + "ON CHAMADOS_DESENVOLVIMENTO.IdUnidEmp=UNIDADE_PENAL_EMPRESA.IdUnidEmp "
                    + "INNER JOIN SOLICITANTES "
                    + "ON CHAMADOS_DESENVOLVIMENTO.IdSolicitante=SOLICITANTES.IdSolicitante "
                    + "WHERE CHAMADOS_DESENVOLVIMENTO.IdCHDes='" + jIdChamado.getText() + "'");
            HashMap parametros = new HashMap();
            parametros.put("idChamado", jIdChamado.getText());
            parametros.put("nomeUsuario", nameUser);
            // Sub Relatório
            try {
                parametros.put("REPORT_CONNECTION", conecta.stmt.getConnection());
            } catch (SQLException ex) {
            }
            JRResultSetDataSource relatResul = new JRResultSetDataSource(conecta.rs); // Passa o resulSet Preenchido para o relatorio                                   
            JasperPrint jpPrint = JasperFillManager.fillReport(path, parametros, relatResul); // indica o caminmhodo relatório
            JasperViewer jv = new JasperViewer(jpPrint, false); // Cria instancia para impressao          
            jv.setExtendedState(JasperViewer.MAXIMIZED_BOTH); // Maximizar o relatório
            jv.setTitle("Relatório de Chamado no Desenvolvimento");
            jv.setVisible(true); // Chama o relatorio para ser visualizado                                    
            jv.toFront(); // Traz o relatorio para frente da aplicação            
            conecta.desconecta();
        } catch (JRException e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao chamar o Relatório. \n\nERRO :" + e);
        }
        conecta.desconecta();
    }

    public void preencherTabelaChamados(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Solicitante", "Unidade Prisional"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                // Formatar a data no formato Brasil
                dataBrasil = conecta.rs.getString("DataCha");
                String dia = dataBrasil.substring(8, 10);
                String mes = dataBrasil.substring(5, 7);
                String ano = dataBrasil.substring(0, 4);
                dataBrasil = dia + "/" + mes + "/" + ano;
                count = count + 1;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdCHDes"), dataBrasil, conecta.rs.getString("StatusCha"), conecta.rs.getString("NomeSolicitante"), conecta.rs.getString("DescricaoUnidade")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não existem dados a serem exibidos....");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaChamdosSup.setModel(modelo);
        jTabelaChamdosSup.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaChamdosSup.getColumnModel().getColumn(0).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaChamdosSup.getColumnModel().getColumn(1).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaChamdosSup.getColumnModel().getColumn(2).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaChamdosSup.getColumnModel().getColumn(3).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(4).setPreferredWidth(300);
        jTabelaChamdosSup.getColumnModel().getColumn(4).setResizable(false);
        jTabelaChamdosSup.getTableHeader().setReorderingAllowed(false);
        jTabelaChamdosSup.setAutoResizeMode(jTabelaChamdosSup.AUTO_RESIZE_OFF);
        jTabelaChamdosSup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // MÉTODO PARA ALINHAR AS COLUNAS DA TABELA
        alinhaCeluasTabelaFornecedor();
        conecta.desconecta();
    }

    public void alinhaCeluasTabelaFornecedor() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaChamdosSup.getColumnModel().getColumn(0).setCellRenderer(centralizado);
    }

    public void limparTabelaFornecedor() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Solicitante", "Unidade Prisional"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaChamdosSup.setModel(modelo);
        jTabelaChamdosSup.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaChamdosSup.getColumnModel().getColumn(0).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTabelaChamdosSup.getColumnModel().getColumn(1).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTabelaChamdosSup.getColumnModel().getColumn(2).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTabelaChamdosSup.getColumnModel().getColumn(3).setResizable(false);
        jTabelaChamdosSup.getColumnModel().getColumn(4).setPreferredWidth(300);
        jTabelaChamdosSup.getColumnModel().getColumn(4).setResizable(false);
        jTabelaChamdosSup.getTableHeader().setReorderingAllowed(false);
        jTabelaChamdosSup.setAutoResizeMode(jTabelaChamdosSup.AUTO_RESIZE_OFF);
        jTabelaChamdosSup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaItensChamados(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Hora Inicial", "Hora Termino", "Texto Chamado"};
        conecta.abrirConexao();
        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                // Formatar a data no formato Brasil
                dataEntrada = conecta.rs.getString("DataItemCh");
                String dia = dataEntrada.substring(8, 10);
                String mes = dataEntrada.substring(5, 7);
                String ano = dataEntrada.substring(0, 4);
                dataEntrada = dia + "/" + mes + "/" + ano;
                count0 = count0 + 1;
                jtotalRegistros.setText(Integer.toString(count0)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdItemDes"), dataEntrada, conecta.rs.getString("HorarioInicio"), conecta.rs.getString("HorarioTermino"), conecta.rs.getString("TextoSuporte")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItens.setModel(modelo);
        jTabelaItens.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItens.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaItens.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItens.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItens.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(4).setPreferredWidth(550);
        jTabelaItens.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItens.getTableHeader().setReorderingAllowed(false);
        jTabelaItens.setAutoResizeMode(jTabelaItens.AUTO_RESIZE_OFF);
        jTabelaItens.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // MÉTODO PARA ALINHAR AS COLUNAS DA TABELA
        alinhaCeluasTabelaItens();
        conecta.desconecta();
    }

    public void alinhaCeluasTabelaItens() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaItens.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaItens.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaItens.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaItens.getColumnModel().getColumn(3).setCellRenderer(centralizado);
    }

    public void limparTabelaItens() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Hora Inicial", "Hora Termino", "Texto Chamado"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaItens.setModel(modelo);
        jTabelaItens.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaItens.getColumnModel().getColumn(0).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaItens.getColumnModel().getColumn(1).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTabelaItens.getColumnModel().getColumn(2).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTabelaItens.getColumnModel().getColumn(3).setResizable(false);
        jTabelaItens.getColumnModel().getColumn(4).setPreferredWidth(550);
        jTabelaItens.getColumnModel().getColumn(4).setResizable(false);
        jTabelaItens.getTableHeader().setReorderingAllowed(false);
        jTabelaItens.setAutoResizeMode(jTabelaItens.AUTO_RESIZE_OFF);
        jTabelaItens.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUser = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUser + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcesso = conecta.rs.getInt("IdUsuario");
            codAbrir = conecta.rs.getInt("Abrir");
            codIncluir = conecta.rs.getInt("Incluir");
            codAlterar = conecta.rs.getInt("Alterar");
            codExcluir = conecta.rs.getInt("Excluir");
            codGravar = conecta.rs.getInt("Gravar");
            codConsultar = conecta.rs.getInt("Consultar");
            nomeTela = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdChamado.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void objLog1() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(idItemChamadoSup);
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarNivelUsuario() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            nivelUsuario = conecta.rs.getInt("NivelUsuario");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }
}
