/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.LimiteDigitos;
import Controle.LimiteDigitosMin;
import Controle.ModeloTabela;
import Dao.ConexaoBancoDados;
import Dao.LogSistemaDao;
import Dao.UsuarioDao;
import Dao.telaAcessoDao;
import Modelo.LogSistema;
import Modelo.TelaAcessos;
import Modelo.Usuarios;
import static Visao.LoginHD.nameUser;
import static Visao.TelaPrincipal.codAbrir;
import static Visao.TelaPrincipal.codAlterar;
import static Visao.TelaPrincipal.codConsultar;
import static Visao.TelaPrincipal.codExcluir;
import static Visao.TelaPrincipal.codGravar;
import static Visao.TelaPrincipal.codIncluir;
import static Visao.TelaPrincipal.codUserAcesso;
import static Visao.TelaPrincipal.codigoUser;
import static Visao.TelaPrincipal.jDataSistema;
import static Visao.TelaPrincipal.jHoraSistema;
import static Visao.TelaPrincipal.nomeTela;
import static Visao.TelaPrincipal.telaCadastroAcessos;
import static Visao.TelaPrincipal.telaCadastroCopiar;
import static Visao.TelaPrincipal.telaCadastroUsuarios;
import java.awt.Color;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ronal
 */
public class TelaUsuarios extends javax.swing.JInternalFrame {

    ConexaoBancoDados conecta = new ConexaoBancoDados();
    Usuarios objUser = new Usuarios();
    UsuarioDao userDao = new UsuarioDao();
    TelaAcessos objTelaAcesso = new TelaAcessos();
    telaAcessoDao controlaAcess = new telaAcessoDao();
    //
    LogSistemaDao controlLog = new LogSistemaDao();
    LogSistema objLogSys = new LogSistema();
    //
    int count = 0;
    int acao = 0;
    int flag = 0;
    String dataCadastro = "";
    String statusMov;
    String horaMov;
    String dataModFinal;
    String nomeModuloTela = "Configurações:Usuários do Sistema:Manutenção";
    int nivel = 0;
    String nivelNome = "";
    // CHAVES PARA CRIPTOGRAFIA
    public static byte[] codigoValidador;
    byte[] senhaCriptografada;
    byte[] senhaDescriptografada;
    String validadorInterno;
    String chaveHexadecinal;
    //
    int pAbrir = 0;
    int pIncluir = 0;
    int pAlterar = 0;
    int pExcluir = 0;
    int pGravar = 0;
    int pConsultar = 0;
    String pAbrirAcesso = "";
    String pIncluirAcesso = "";
    String pAlterarAcesso = "";
    String pExcluirAcesso = "";
    String pGravarAcesso = "";
    String pConsultarAcesso = "";
    int codigoModulo = 0;
    int codigoTelaAcesso = 0;
    //
    String nomeTelaUsuario = "";
    String codigoUsuario = "";
    String nomeUsuario = "";
    String pLogin = "";

    public static TelaCopiaPerfilUsuario pesquisarPerfilUsuario;

    /**
     * Creates new form TelaUsuarios
     */
    public TelaUsuarios() {
        initComponents();
        corCampos();
        formatarCampos();
    }

    public void mostrarUsuario() {
        pesquisarPerfilUsuario = new TelaCopiaPerfilUsuario(this, true);
        pesquisarPerfilUsuario.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPesquisaUsuarioNome = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jBtPesquisarNomeUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaUsuarios = new javax.swing.JTable();
        jPanel30 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jtotalRegistros = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIdUsuario = new javax.swing.JTextField();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jDataCadastro = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jNomeUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Cargo = new javax.swing.JLabel();
        jSetorUsuario = new javax.swing.JTextField();
        jCargo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxNivelAcesso = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jBtNovo = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtSalvar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jBtSair = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLogin = new javax.swing.JTextField();
        jSenhaUsuario = new javax.swing.JPasswordField();
        jConfirmaSenha = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jNomeUsuarioAcesso = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jComboBoxTelaAcesso = new javax.swing.JComboBox();
        jPanel17 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jComboBoxGravar = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jComboBoxAbrir = new javax.swing.JComboBox();
        jComboBoxConsultar = new javax.swing.JComboBox();
        jComboBoxAlterar = new javax.swing.JComboBox();
        jComboBoxExcluir = new javax.swing.JComboBox();
        jComboBoxIncluir = new javax.swing.JComboBox();
        jBtCopiarPerfil = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabelaAcessos = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jBtAlterarAcesso = new javax.swing.JButton();
        jBtSalvarAcesso = new javax.swing.JButton();
        jBtCancelarAcesso = new javax.swing.JButton();
        jBtNovoAcesso = new javax.swing.JButton();
        jBtSairAcesso = new javax.swing.JButton();
        jBtExcluirAcesso = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("...::: Cadastro de Usuarios :::...");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/240119191009_16.png"))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome Usuário:");

        jPesquisaUsuarioNome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Todos");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jBtPesquisarNomeUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Lupas_1338_05.gif"))); // NOI18N
        jBtPesquisarNomeUser.setContentAreaFilled(false);
        jBtPesquisarNomeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtPesquisarNomeUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPesquisaUsuarioNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisarNomeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPesquisaUsuarioNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtPesquisarNomeUser))
                .addGap(27, 27, 27))
        );

        jTabelaUsuarios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Status", "Nome do Usuário"
            }
        ));
        jTabelaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaUsuarios);
        if (jTabelaUsuarios.getColumnModel().getColumnCount() > 0) {
            jTabelaUsuarios.getColumnModel().getColumn(0).setMinWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(0).setMaxWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(1).setMinWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(1).setMaxWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(2).setMinWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(2).setMaxWidth(70);
            jTabelaUsuarios.getColumnModel().getColumn(3).setMinWidth(250);
            jTabelaUsuarios.getColumnModel().getColumn(3).setMaxWidth(250);
        }

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jLabel67.setText("Total de Registros:");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel67))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel67)
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jtotalRegistros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtotalRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab("Listagem", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Código");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Status");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Data Cadastro");

        jIdUsuario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jIdUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jIdUsuario.setEnabled(false);

        jComboBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo" }));
        jComboBoxStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxStatus.setEnabled(false);

        jDataCadastro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDataCadastro.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBoxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome do Usuário");

        jNomeUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeUsuario.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Setor de Trabalho");

        Cargo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Cargo.setText("Cargo");

        jSetorUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSetorUsuario.setEnabled(false);

        jCargo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jCargo.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Nivel de Acesso");

        jComboBoxNivelAcesso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxNivelAcesso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Desenvolvedor", "Suporte Técnico", "Técnico de Informática - UP" }));
        jComboBoxNivelAcesso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxNivelAcesso.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(Cargo)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jCargo)
                    .addComponent(jSetorUsuario)
                    .addComponent(jNomeUsuario)
                    .addComponent(jComboBoxNivelAcesso, 0, 389, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSetorUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(Cargo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxNivelAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_add.png"))); // NOI18N
        jBtNovo.setText("Novo");
        jBtNovo.setContentAreaFilled(false);
        jBtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoActionPerformed(evt);
            }
        });

        jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterar.setText("Alterar");
        jBtAlterar.setContentAreaFilled(false);
        jBtAlterar.setEnabled(false);
        jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });

        jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/191216104515_16.png"))); // NOI18N
        jBtExcluir.setText("Excluir");
        jBtExcluir.setContentAreaFilled(false);
        jBtExcluir.setEnabled(false);
        jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });

        jBtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvar.setText("Gravar");
        jBtSalvar.setContentAreaFilled(false);
        jBtSalvar.setEnabled(false);
        jBtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarActionPerformed(evt);
            }
        });

        jBtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelar.setText("Cancelar");
        jBtCancelar.setContentAreaFilled(false);
        jBtCancelar.setEnabled(false);
        jBtCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });

        jBtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSair.setText("Sair");
        jBtSair.setContentAreaFilled(false);
        jBtSair.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSair.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSair.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jBtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBtNovo)
                .addComponent(jBtAlterar)
                .addComponent(jBtExcluir)
                .addComponent(jBtSalvar)
                .addComponent(jBtCancelar))
            .addComponent(jBtSair)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Login:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Senha:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 0));
        jLabel9.setText("Confirma Senha:");

        jLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLogin.setEnabled(false);

        jSenhaUsuario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jSenhaUsuario.setEnabled(false);

        jConfirmaSenha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jConfirmaSenha.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jSenhaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLogin))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jConfirmaSenha, jSenhaUsuario});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jSenhaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manutenção", jPanel2);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Nome do Usuário:");

        jNomeUsuarioAcesso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jNomeUsuarioAcesso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jNomeUsuarioAcesso.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jNomeUsuarioAcesso.setEnabled(false);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Tela de Acesso");

        jComboBoxTelaAcesso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione..." }));
        jComboBoxTelaAcesso.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxTelaAcesso.setEnabled(false);
        jComboBoxTelaAcesso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTelaAcessoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jComboBoxTelaAcesso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jNomeUsuarioAcesso)
                        .addGap(32, 32, 32))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNomeUsuarioAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxTelaAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Acessos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(204, 0, 0))); // NOI18N

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Incluir");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Abrir");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setText("Excluir");

        jComboBoxGravar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxGravar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxGravar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxGravar.setEnabled(false);

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Alterar");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Consultar");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("Gravar");

        jComboBoxAbrir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxAbrir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxAbrir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxAbrir.setEnabled(false);

        jComboBoxConsultar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxConsultar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxConsultar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxConsultar.setEnabled(false);

        jComboBoxAlterar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxAlterar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxAlterar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxAlterar.setEnabled(false);

        jComboBoxExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxExcluir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxExcluir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxExcluir.setEnabled(false);

        jComboBoxIncluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxIncluir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Não", "Sim" }));
        jComboBoxIncluir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jComboBoxIncluir.setEnabled(false);

        jBtCopiarPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Copy-16x16.png"))); // NOI18N
        jBtCopiarPerfil.setToolTipText("Copiar Pérfil de Usuário");
        jBtCopiarPerfil.setContentAreaFilled(false);
        jBtCopiarPerfil.setEnabled(false);
        jBtCopiarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCopiarPerfilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCopiarPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBoxAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtCopiarPerfil))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jTabelaAcessos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabelaAcessos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome da Tela", "Abrir", "Incluir", "Alterar", "Excluir", "Consultar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaAcessos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAcessosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabelaAcessos);
        if (jTabelaAcessos.getColumnModel().getColumnCount() > 0) {
            jTabelaAcessos.getColumnModel().getColumn(0).setMinWidth(50);
            jTabelaAcessos.getColumnModel().getColumn(0).setMaxWidth(50);
            jTabelaAcessos.getColumnModel().getColumn(1).setMinWidth(400);
            jTabelaAcessos.getColumnModel().getColumn(1).setMaxWidth(400);
            jTabelaAcessos.getColumnModel().getColumn(2).setMinWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(2).setMaxWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(3).setMinWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(3).setMaxWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(4).setMinWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(4).setMaxWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(5).setMinWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(5).setMaxWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(6).setMinWidth(60);
            jTabelaAcessos.getColumnModel().getColumn(6).setMaxWidth(60);
        }

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true)));

        jBtAlterarAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/8437_16x16.png"))); // NOI18N
        jBtAlterarAcesso.setText("Alterar");
        jBtAlterarAcesso.setContentAreaFilled(false);
        jBtAlterarAcesso.setEnabled(false);
        jBtAlterarAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtAlterarAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtAlterarAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarAcessoActionPerformed(evt);
            }
        });

        jBtSalvarAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1294_16x16.png"))); // NOI18N
        jBtSalvarAcesso.setText("Gravar");
        jBtSalvarAcesso.setContentAreaFilled(false);
        jBtSalvarAcesso.setEnabled(false);
        jBtSalvarAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSalvarAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSalvarAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSalvarAcessoActionPerformed(evt);
            }
        });

        jBtCancelarAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Button_Close_Icon_16.png"))); // NOI18N
        jBtCancelarAcesso.setText("Cancelar");
        jBtCancelarAcesso.setContentAreaFilled(false);
        jBtCancelarAcesso.setEnabled(false);
        jBtCancelarAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtCancelarAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtCancelarAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarAcessoActionPerformed(evt);
            }
        });

        jBtNovoAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_add.png"))); // NOI18N
        jBtNovoAcesso.setText("Novo");
        jBtNovoAcesso.setContentAreaFilled(false);
        jBtNovoAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtNovoAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtNovoAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtNovoAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtNovoAcessoActionPerformed(evt);
            }
        });

        jBtSairAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Log_Out_Icon_16.png"))); // NOI18N
        jBtSairAcesso.setText("Sair");
        jBtSairAcesso.setContentAreaFilled(false);
        jBtSairAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtSairAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtSairAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtSairAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSairAcessoActionPerformed(evt);
            }
        });

        jBtExcluirAcesso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/3630_16x16.png"))); // NOI18N
        jBtExcluirAcesso.setText("Excluir");
        jBtExcluirAcesso.setContentAreaFilled(false);
        jBtExcluirAcesso.setEnabled(false);
        jBtExcluirAcesso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtExcluirAcesso.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirAcesso.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtExcluirAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirAcessoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jBtNovoAcesso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtAlterarAcesso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtExcluirAcesso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtSalvarAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCancelarAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSairAcesso)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jBtNovoAcesso)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtSalvarAcesso)
                    .addComponent(jBtCancelarAcesso)
                    .addComponent(jBtAlterarAcesso)))
            .addComponent(jBtSairAcesso)
            .addComponent(jBtExcluirAcesso)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Acessos", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(320, 20, 470, 473);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        count = 0;
        flag = 1;
        if (evt.getStateChange() == evt.SELECTED) {
            this.pesquisarTodos("SELECT * FROM USUARIOS ");
        } else {
            limparTabela();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jBtPesquisarNomeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPesquisarNomeUserActionPerformed
        // TODO add your handling code here:
        flag = 1;
        count = 0;
        if (jPesquisaUsuarioNome.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Informe dados para pesquisa.");
            jPesquisaUsuarioNome.requestFocus();
        } else {
            pesquisarTodos("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario LIKE'%" + jPesquisaUsuarioNome.getText() + "%'");
        }
    }//GEN-LAST:event_jBtPesquisarNomeUserActionPerformed

    private void jTabelaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaUsuariosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        if (flag == 1) {
            String user = "" + jTabelaUsuarios.getValueAt(jTabelaUsuarios.getSelectedRow(), 0);
            String nomeuser = "" + jTabelaUsuarios.getValueAt(jTabelaUsuarios.getSelectedRow(), 3);
            jPesquisaUsuarioNome.setText(nomeuser);
            //
            if (!jIdUsuario.getText().equals("")) {
                bloquearBotoes();
                bloquearCampos();
                jBtNovo.setEnabled(true);
                jBtAlterar.setEnabled(true);
                jBtExcluir.setEnabled(true);
                //

                jBtCopiarPerfil.setEnabled(true);
            }
            conecta.abrirConexao();
            try {
                conecta.executaSQL("SELECT * FROM USUARIOS "
                        + "WHERE IdUsuario='" + user + "'");
                conecta.rs.first();
                jIdUsuario.setText(String.valueOf(conecta.rs.getInt("IdUsuario")));
                jComboBoxStatus.addItem(conecta.rs.getString("StatusUsuario"));
                jDataCadastro.setDate(conecta.rs.getDate("DataCadastro"));
                jNomeUsuario.setText(conecta.rs.getString("NomeUsuario"));
                jSetorUsuario.setText(conecta.rs.getString("SetorUsuario"));
                jCargo.setText(conecta.rs.getString("CargoUsuario"));
                nivel = conecta.rs.getInt("NivelUsuario");
                if (nivel == 0) {
                    nivelNome = "Desenvolvedor";
                } else if (nivel == 1) {
                    nivelNome = "Suporte Técnico";
                }
                jComboBoxNivelAcesso.setSelectedItem(nivelNome);
                jLogin.setText(conecta.rs.getString("LoginUsuario"));
                jSenhaUsuario.setText(conecta.rs.getString("SenhaUsuario"));
                jConfirmaSenha.setText(conecta.rs.getString("SenhaUsuario1"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível listar usuario\nERRO: " + ex);
            }
            preencherTabelaAcessos("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + jIdUsuario.getText() + "'");
        }
    }//GEN-LAST:event_jTabelaUsuariosMouseClicked

    private void jBtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroUsuarios);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroUsuarios) && codIncluir == 1) {
            acao = 1;
            bloquearCampos();
            bloquearBotoes();
            Novo();
            statusMov = "Incluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroUsuarios);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroUsuarios) && codAlterar == 1) {
            if (jLogin.getText().equals("admin")) {
                JOptionPane.showMessageDialog(null, "Alguns campos do usuário administrador não poderão ser modificados.\nSomente a senha poderá ser modificada. Dúvidas, informe ao Administrador do Sistema.");
                acao = 2;
                bloquearCampos();
                bloquearBotoes();
                AlterarAdm();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            } else {
                acao = 2;
                bloquearBotoes();
                bloquearCampos();
                Alterar();
                statusMov = "Alterou";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroUsuarios);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroUsuarios) && codExcluir == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir USUARIO selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objUser.setIdUsuario(Integer.valueOf(jIdUsuario.getText()));
                userDao.excluirUsuarios(objUser);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                bloquearBotoes();
                bloquearCampos();
                Excluir();
                JOptionPane.showMessageDialog(null, "Exclusão do USUÁRIO com sucesso!!");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroUsuarios);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroUsuarios) && codGravar == 1) {
            if (jNomeUsuario.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o nome completo do usuário.");
            } else if (jLogin.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe o login do usuário.");
            } else if (jSenhaUsuario.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a senha do usuário.");
            } else if (jConfirmaSenha.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Informe a confirmação da senha do usuário.");
            } else if (jDataCadastro.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a data cadastro do usuário.");
            } else if (jComboBoxNivelAcesso.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione o nível do usuário.");
            } else {
                objUser.setStatus((String) jComboBoxStatus.getSelectedItem());
                objUser.setDataCadastro(jDataCadastro.getDate());
                objUser.setNomeUsuario(jNomeUsuario.getText());
                objUser.setSetorUsuario(jSetorUsuario.getText());
                objUser.setCargoUsuario(jCargo.getText());
                if (jComboBoxNivelAcesso.getSelectedItem().equals("Desenvolvedor")) {
                    nivel = 0;
                    objUser.setNivelUsuario(nivel);
                } else if (jComboBoxNivelAcesso.getSelectedItem().equals("Suporte Técnico")) {
                    nivel = 1;
                    objUser.setNivelUsuario(nivel);
                } else if (jComboBoxNivelAcesso.getSelectedItem().equals("Técnico de Informática - UP")) {
                    nivel = 2;
                    objUser.setNivelUsuario(nivel);
                }
                objUser.setLoginUsuario(jLogin.getText());
                objUser.setSenhaUsuario(jSenhaUsuario.getText());
                objUser.setSenhaUsuario1(jConfirmaSenha.getText());
                if (acao == 1) {
                    // Só inclui registro se os campo não for em branco e compara se as senhas são iguais
                    if (jSenhaUsuario.getText() == null ? jConfirmaSenha.getText() == null : jConfirmaSenha.getText().equals(jSenhaUsuario.getText())) {
                        userDao.incluirUsuarios(objUser);
                        buscarCodigo();
                        //
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação 
                        bloquearCampos();
                        bloquearBotoes();
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Realizado com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Senhas não conferem !!!");
                    }
                }
                if (acao == 2) {
                    // Só inclui registro se os campo não for em branco e compara se as senhas são iguais
                    if (jSenhaUsuario.getText() == null ? jConfirmaSenha.getText() == null : jConfirmaSenha.getText().equals(jSenhaUsuario.getText())) {
                        objUser.setIdUsuario(Integer.valueOf(jIdUsuario.getText()));
                        userDao.alterarUsuarios(objUser);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação 
                        bloquearCampos();
                        bloquearBotoes();
                        Salvar();
                        JOptionPane.showMessageDialog(rootPane, "Realizado com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Senhas não conferem !!!");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        // TODO add your handling code here:
        Cancelar();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairActionPerformed

    private void jComboBoxTelaAcessoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTelaAcessoMouseClicked
        // TODO add your handling code here:
        pesquisarTelaAcesso();
    }//GEN-LAST:event_jComboBoxTelaAcessoMouseClicked

    private void jBtCopiarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCopiarPerfilActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroCopiar);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroCopiar) && codAbrir == 1) {
            Integer rows = jTabelaAcessos.getModel().getRowCount();
            if (rows == 0) {
                JOptionPane.showMessageDialog(rootPane, "Não existe registros de acesso a ser copiado.");
            } else {
                mostrarUsuario();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtCopiarPerfilActionPerformed

    private void jTabelaAcessosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaAcessosMouseClicked
        // TODO add your handling code here:
        flag = 1;
        String idTela = "" + jTabelaAcessos.getValueAt(jTabelaAcessos.getSelectedRow(), 0);
        //
        jBtNovoAcesso.setEnabled(true);
        jBtAlterarAcesso.setEnabled(true);
        jBtExcluirAcesso.setEnabled(true);
        jBtCancelarAcesso.setEnabled(true);
        //
        jComboBoxTelaAcesso.removeAllItems();
        //
        jComboBoxAbrir.removeItem(evt);
        jComboBoxIncluir.removeItem(evt);
        jComboBoxAlterar.removeItem(evt);
        jComboBoxExcluir.removeItem(evt);
        jComboBoxGravar.removeItem(evt);
        jComboBoxConsultar.removeItem(evt);
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "INNER JOIN USUARIOS "
                    + "ON TELAS_ACESSO.IdUsuario=USUARIOS.IdUsuario "
                    + "WHERE TELAS_ACESSO.IdTela='" + idTela + "'");
            conecta.rs.first();
            codigoTelaAcesso = conecta.rs.getInt("IdTela");
            jNomeUsuarioAcesso.setText(jNomeUsuario.getText());
            jComboBoxTelaAcesso.addItem(conecta.rs.getString("NomeTela"));
            pAbrir = conecta.rs.getInt("Abrir");
            if (pAbrir == 0) {
                jComboBoxAbrir.setSelectedItem("Não");
            } else if (pAbrir == 1) {
                jComboBoxAbrir.setSelectedItem("Sim");
            }
            pIncluir = conecta.rs.getInt("Incluir");
            if (pIncluir == 0) {
                jComboBoxIncluir.setSelectedItem("Não");
            } else if (pIncluir == 1) {
                jComboBoxIncluir.setSelectedItem("Sim");
            }
            pAlterar = conecta.rs.getInt("Alterar");
            if (pAlterar == 0) {
                jComboBoxAlterar.setSelectedItem("Não");
            } else if (pAlterar == 1) {
                jComboBoxAlterar.setSelectedItem("Sim");
            }
            pExcluir = conecta.rs.getInt("Excluir");
            if (pExcluir == 0) {
                jComboBoxExcluir.setSelectedItem("Não");
            } else if (pExcluir == 1) {
                jComboBoxExcluir.setSelectedItem("Sim");
            }
            pGravar = conecta.rs.getInt("Gravar");
            if (pGravar == 0) {
                jComboBoxGravar.setSelectedItem("Não");
            } else if (pGravar == 1) {
                jComboBoxGravar.setSelectedItem("Sim");
            }
            pConsultar = conecta.rs.getInt("Consultar");
            if (pConsultar == 0) {
                jComboBoxConsultar.setSelectedItem("Não");
            } else if (pConsultar == 1) {
                jComboBoxConsultar.setSelectedItem("Sim");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível listar dados do usuário.\nERRO: " + ex);
        }
    }//GEN-LAST:event_jTabelaAcessosMouseClicked

    private void jBtAlterarAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarAcessoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAcessos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroAcessos) && codAlterar == 1) {
            acao = 8;
            statusMov = "Alterou";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            AlterarAcesso();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtAlterarAcessoActionPerformed

    private void jBtSalvarAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSalvarAcessoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAcessos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroAcessos) && codGravar == 1) {
            verificarTelaAcesso();
            if (jComboBoxTelaAcesso.getSelectedItem().equals("Selecione...") || jComboBoxTelaAcesso.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a tela de acesso do usuário...");
            } else if (jComboBoxAbrir.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a configuração para Abrir.");
            } else if (jComboBoxAlterar.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a configuração para Alterar.");
            } else if (jComboBoxExcluir.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a configuração para Excluir.");
            } else if (jComboBoxGravar.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a configuração para Gravar.");
            } else if (jComboBoxConsultar.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(rootPane, "Informe a configuração para Consultar.");
            } else {
                if (jComboBoxAbrir.getSelectedItem().equals("Não")) {
                    pAbrir = 0;
                } else if (jComboBoxAbrir.getSelectedItem().equals("Sim")) {
                    pAbrir = 1;
                }
                if (jComboBoxIncluir.getSelectedItem().equals("Não")) {
                    pIncluir = 0;
                } else if (jComboBoxIncluir.getSelectedItem().equals("Sim")) {
                    pIncluir = 1;
                }
                if (jComboBoxAlterar.getSelectedItem().equals("Não")) {
                    pAlterar = 0;
                } else if (jComboBoxAlterar.getSelectedItem().equals("Sim")) {
                    pAlterar = 1;
                }
                if (jComboBoxExcluir.getSelectedItem().equals("Não")) {
                    pExcluir = 0;
                } else if (jComboBoxExcluir.getSelectedItem().equals("Sim")) {
                    pExcluir = 1;
                }
                if (jComboBoxGravar.getSelectedItem().equals("Não")) {
                    pGravar = 0;
                } else if (jComboBoxGravar.getSelectedItem().equals("Sim")) {
                    pGravar = 1;
                }
                if (jComboBoxConsultar.getSelectedItem().equals("Não")) {
                    pConsultar = 0;
                } else if (jComboBoxConsultar.getSelectedItem().equals("Sim")) {
                    pConsultar = 1;
                }
                objTelaAcesso.setIdUsuario(Integer.valueOf(jIdUsuario.getText()));
                objTelaAcesso.setNomeUsuario(jNomeUsuario.getText());
                objTelaAcesso.setNomeTela((String) jComboBoxTelaAcesso.getSelectedItem());
                objTelaAcesso.setIncluir(pIncluir);
                objTelaAcesso.setAbrir(pAbrir);
                objTelaAcesso.setAlterar(pAlterar);
                objTelaAcesso.setExcluir(pExcluir);
                objTelaAcesso.setGravar(pGravar);
                objTelaAcesso.setConsultar(pConsultar);
                if (acao == 7) {
                    if (jIdUsuario.getText().equals(codigoUsuario) && jComboBoxTelaAcesso.getSelectedItem().equals(nomeTelaUsuario)) {
                        JOptionPane.showMessageDialog(rootPane, "Esse acesso ja foi cadastrado para esse usuário!!!");
                    } else {
                        objTelaAcesso.setUsuarioInsert(nameUser);
                        objTelaAcesso.setDataInsert(dataModFinal);
                        objTelaAcesso.setHorarioInsert(horaMov);
                        //
                        controlaAcess.incluirTelaAcesso(objTelaAcesso);
                        objLog();
                        controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                        SalvarAcesso();
                        preencherTabelaAcessos("SELECT * FROM TELAS_ACESSO "
                                + "WHERE IdUsuario='" + jIdUsuario.getText() + "'");
                        JOptionPane.showMessageDialog(rootPane, "Cadastro Realizado com sucesso");
                    }
                }
                if (acao == 8) {
                    objTelaAcesso.setUsuarioUp(nameUser);
                    objTelaAcesso.setDataUp(dataModFinal);
                    objTelaAcesso.setHorarioUp(horaMov);
                    //
                    objTelaAcesso.setIdTela(codigoTelaAcesso);
                    controlaAcess.alterarTelaAcesso(objTelaAcesso);
                    objLog();
                    controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                    SalvarAcesso();
                    preencherTabelaAcessos("SELECT * FROM TELAS_ACESSO "
                            + "WHERE IdUsuario='" + jIdUsuario.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Cadastro Realizado com sucesso");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtSalvarAcessoActionPerformed

    private void jBtCancelarAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarAcessoActionPerformed
        // TODO add your handling code here:
        CancelarAcesso();
    }//GEN-LAST:event_jBtCancelarAcessoActionPerformed

    private void jBtNovoAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtNovoAcessoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAcessos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroAcessos) && codIncluir == 1) {
            if (jIdUsuario.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Não existe usuário selecionado para ser configurado o acesso.");
            } else {
                acao = 7;
                statusMov = "Incluiu";
                horaMov = jHoraSistema.getText();
                dataModFinal = jDataSistema.getText();
                NovoAcesso();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtNovoAcessoActionPerformed

    private void jBtSairAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSairAcessoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtSairAcessoActionPerformed

    private void jBtExcluirAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirAcessoActionPerformed
        // TODO add your handling code here:
        buscarAcessoUsuario(telaCadastroAcessos);
        if (nameUser.equals("ADMINISTRADOR DO SISTEMA") || codigoUser == codUserAcesso && nomeTela.equals(telaCadastroAcessos) && codExcluir == 1) {
            statusMov = "Excluiu";
            horaMov = jHoraSistema.getText();
            dataModFinal = jDataSistema.getText();
            int resposta = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir Acesso selecionado?", "Confirmação",
                    JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                objTelaAcesso.setIdTela(Integer.valueOf(codigoTelaAcesso));
                controlaAcess.excluirTelaAcesso(objTelaAcesso);
                objLog();
                controlLog.incluirLogSistema(objLogSys); // Grava o log da operação
                ExcluirAcesso();
                preencherTabelaAcessos("SELECT * FROM TELAS_ACESSO "
                        + "WHERE IdUsuario='" + jIdUsuario.getText() + "'");
                JOptionPane.showMessageDialog(null, "Registro excluído com sucesso.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuário não tem acesso ao registro.");
        }
    }//GEN-LAST:event_jBtExcluirAcessoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cargo;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAlterarAcesso;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtCancelarAcesso;
    private javax.swing.JButton jBtCopiarPerfil;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtExcluirAcesso;
    private javax.swing.JButton jBtNovo;
    private javax.swing.JButton jBtNovoAcesso;
    private javax.swing.JButton jBtPesquisarNomeUser;
    private javax.swing.JButton jBtSair;
    private javax.swing.JButton jBtSairAcesso;
    private javax.swing.JButton jBtSalvar;
    private javax.swing.JButton jBtSalvarAcesso;
    private javax.swing.JTextField jCargo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxAbrir;
    private javax.swing.JComboBox jComboBoxAlterar;
    private javax.swing.JComboBox jComboBoxConsultar;
    private javax.swing.JComboBox jComboBoxExcluir;
    private javax.swing.JComboBox jComboBoxGravar;
    private javax.swing.JComboBox jComboBoxIncluir;
    private javax.swing.JComboBox<String> jComboBoxNivelAcesso;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    public static javax.swing.JComboBox jComboBoxTelaAcesso;
    private javax.swing.JPasswordField jConfirmaSenha;
    private com.toedter.calendar.JDateChooser jDataCadastro;
    public static javax.swing.JTextField jIdUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLogin;
    private javax.swing.JTextField jNomeUsuario;
    private javax.swing.JTextField jNomeUsuarioAcesso;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jPesquisaUsuarioNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPasswordField jSenhaUsuario;
    private javax.swing.JTextField jSetorUsuario;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTabelaAcessos;
    private javax.swing.JTable jTabelaUsuarios;
    private javax.swing.JLabel jtotalRegistros;
    // End of variables declaration//GEN-END:variables

    public void formatarCampos() {
        jNomeUsuario.setDocument(new LimiteDigitos(67));
        jLogin.setDocument(new LimiteDigitosMin(25));
        jSenhaUsuario.setDocument(new LimiteDigitosMin(21));
        jConfirmaSenha.setDocument(new LimiteDigitosMin(21));
    }

    public void corCampos() {
        jIdUsuario.setBackground(Color.white);
        jComboBoxStatus.setBackground(Color.white);
        jDataCadastro.setBackground(Color.white);
        jNomeUsuario.setBackground(Color.white);
        jSetorUsuario.setBackground(Color.white);
        jCargo.setBackground(Color.white);
        jComboBoxNivelAcesso.setBackground(Color.white);
        jLogin.setBackground(Color.white);
        jSenhaUsuario.setBackground(Color.white);
        jConfirmaSenha.setBackground(Color.white);
    }

    public void bloquearBotoes() {
        jBtNovo.setEnabled(!true);
        jBtAlterar.setEnabled(!true);
        jBtExcluir.setEnabled(!true);
        jBtSalvar.setEnabled(!true);
        jBtCancelar.setEnabled(!true);
    }

    public void bloquearCampos() {
        jIdUsuario.setEnabled(!true);
        jComboBoxStatus.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeUsuario.setEnabled(!true);
        jSetorUsuario.setEnabled(!true);
        jCargo.setEnabled(!true);
        jComboBoxNivelAcesso.setEnabled(!true);
        jLogin.setEnabled(!true);
        jSenhaUsuario.setEnabled(!true);
        jConfirmaSenha.setEnabled(!true);
    }

    public void limparCampos() {
        jIdUsuario.setText("");
        jComboBoxStatus.setSelectedItem("Ativo");
        jDataCadastro.setDate(null);
        jNomeUsuario.setText("");
        jSetorUsuario.setText("");
        jCargo.setText("");
        jComboBoxNivelAcesso.setSelectedItem("Selecione...");
        jLogin.setText("");
        jSenhaUsuario.setText("");
        jConfirmaSenha.setText("");
    }

    public void Novo() {
        jIdUsuario.setText("");
        jComboBoxStatus.setSelectedItem("Ativo");
        jDataCadastro.setCalendar(Calendar.getInstance());
        jNomeUsuario.setText("");
        jSetorUsuario.setText("");
        jCargo.setText("");
        jComboBoxNivelAcesso.setSelectedItem("Selecione...");
        jLogin.setText("");
        jSenhaUsuario.setText("");
        jConfirmaSenha.setText("");
        //
        jComboBoxStatus.setEnabled(true);
        jDataCadastro.setEnabled(true);
        jNomeUsuario.setEnabled(true);
        jSetorUsuario.setEnabled(true);
        jCargo.setEnabled(true);
        jComboBoxNivelAcesso.setEnabled(true);
        jLogin.setEnabled(true);
        jSenhaUsuario.setEnabled(true);
        jConfirmaSenha.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Alterar() {
        jComboBoxStatus.setEnabled(true);
        jDataCadastro.setEnabled(true);
        jNomeUsuario.setEnabled(true);
        jSetorUsuario.setEnabled(true);
        jCargo.setEnabled(true);
        jComboBoxNivelAcesso.setEnabled(true);
        jLogin.setEnabled(true);
        jSenhaUsuario.setEnabled(true);
        jConfirmaSenha.setEnabled(true);
        //
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void Excluir() {
        jComboBoxStatus.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeUsuario.setEnabled(!true);
        jSetorUsuario.setEnabled(!true);
        jCargo.setEnabled(!true);
        jComboBoxNivelAcesso.setEnabled(!true);
        jLogin.setEnabled(!true);
        jSenhaUsuario.setEnabled(!true);
        jConfirmaSenha.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
    }

    public void Salvar() {
        jComboBoxStatus.setEnabled(!true);
        jDataCadastro.setEnabled(!true);
        jNomeUsuario.setEnabled(!true);
        jSetorUsuario.setEnabled(!true);
        jCargo.setEnabled(!true);
        jComboBoxNivelAcesso.setEnabled(!true);
        jLogin.setEnabled(!true);
        jSenhaUsuario.setEnabled(!true);
        jConfirmaSenha.setEnabled(!true);
        //
        jBtNovo.setEnabled(true);
        jBtAlterar.setEnabled(true);
        jBtExcluir.setEnabled(true);
    }

    public void Cancelar() {
        if (jIdUsuario.getText().equals("")) {
            jIdUsuario.setText("");
            jComboBoxStatus.setSelectedItem("Ativo");
            jDataCadastro.setDate(null);
            jNomeUsuario.setText("");
            jSetorUsuario.setText("");
            jCargo.setText("");
            jComboBoxNivelAcesso.setSelectedItem("Selecione...");
            jLogin.setText("");
            jSenhaUsuario.setText("");
            jConfirmaSenha.setText("");
            //
            jComboBoxStatus.setEnabled(!true);
            jDataCadastro.setEnabled(!true);
            jNomeUsuario.setEnabled(!true);
            jSetorUsuario.setEnabled(!true);
            jCargo.setEnabled(!true);
            jComboBoxNivelAcesso.setEnabled(!true);
            jLogin.setEnabled(!true);
            jSenhaUsuario.setEnabled(!true);
            jConfirmaSenha.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(!true);
            jBtExcluir.setEnabled(!true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        } else {
            jComboBoxStatus.setEnabled(!true);
            jDataCadastro.setEnabled(!true);
            jNomeUsuario.setEnabled(!true);
            jSetorUsuario.setEnabled(!true);
            jCargo.setEnabled(!true);
            jComboBoxNivelAcesso.setEnabled(!true);
            jLogin.setEnabled(!true);
            jSenhaUsuario.setEnabled(!true);
            jConfirmaSenha.setEnabled(!true);
            //
            jBtNovo.setEnabled(true);
            jBtAlterar.setEnabled(true);
            jBtExcluir.setEnabled(true);
            jBtSalvar.setEnabled(!true);
            jBtCancelar.setEnabled(!true);
        }
    }

    public void buscarCodigo() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS");
            conecta.rs.last();
            jIdUsuario.setText(conecta.rs.getString("IdUsuario"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Não foi possível obter o código do usuário.");
        }
        conecta.desconecta();
    }

    public void AlterarAdm() {
        jSenhaUsuario.setEnabled(true);
        jConfirmaSenha.setEnabled(true);
        //        
        jBtSalvar.setEnabled(true);
        jBtCancelar.setEnabled(true);
    }

    public void NovoAcesso() {
        jNomeUsuarioAcesso.setText(jNomeUsuario.getText());
        jComboBoxTelaAcesso.setEnabled(true);
        //
        jComboBoxAbrir.setEnabled(true);
        jComboBoxIncluir.setEnabled(true);
        jComboBoxAlterar.setEnabled(true);
        jComboBoxExcluir.setEnabled(true);
        jComboBoxGravar.setEnabled(true);
        jComboBoxConsultar.setEnabled(true);
        jBtCopiarPerfil.setEnabled(true);
        //
        jBtNovoAcesso.setEnabled(!true);
        jBtAlterarAcesso.setEnabled(!true);
        jBtExcluirAcesso.setEnabled(!true);
        jBtSalvarAcesso.setEnabled(true);
        jBtCancelarAcesso.setEnabled(true);
        //
        jBtCopiarPerfil.setEnabled(!true);
    }

    public void AlterarAcesso() {
        jComboBoxTelaAcesso.setEnabled(true);
        //
        jComboBoxAbrir.setEnabled(true);
        jComboBoxIncluir.setEnabled(true);
        jComboBoxAlterar.setEnabled(true);
        jComboBoxExcluir.setEnabled(true);
        jComboBoxGravar.setEnabled(true);
        jComboBoxConsultar.setEnabled(true);
        //
        jBtNovoAcesso.setEnabled(!true);
        jBtAlterarAcesso.setEnabled(!true);
        jBtExcluirAcesso.setEnabled(!true);
        jBtSalvarAcesso.setEnabled(true);
        jBtCancelarAcesso.setEnabled(true);
        //
        jBtCopiarPerfil.setEnabled(!true);
    }

    public void ExcluirAcesso() {
        jComboBoxTelaAcesso.setEnabled(!true);
        //
        jComboBoxAbrir.setEnabled(!true);
        jComboBoxIncluir.setEnabled(!true);
        jComboBoxAlterar.setEnabled(!true);
        jComboBoxExcluir.setEnabled(!true);
        jComboBoxGravar.setEnabled(!true);
        jComboBoxConsultar.setEnabled(!true);
        //
        jBtNovoAcesso.setEnabled(true);
        jBtAlterarAcesso.setEnabled(!true);
        jBtExcluirAcesso.setEnabled(!true);
        jBtSalvarAcesso.setEnabled(!true);
        jBtCancelarAcesso.setEnabled(!true);
        //
        jBtCopiarPerfil.setEnabled(!true);
    }

    public void SalvarAcesso() {
        jComboBoxTelaAcesso.setEnabled(!true);
        //
        jComboBoxAbrir.setEnabled(!true);
        jComboBoxIncluir.setEnabled(!true);
        jComboBoxAlterar.setEnabled(!true);
        jComboBoxExcluir.setEnabled(!true);
        jComboBoxGravar.setEnabled(!true);
        jComboBoxConsultar.setEnabled(!true);
        //
        jBtNovoAcesso.setEnabled(true);
        jBtAlterarAcesso.setEnabled(true);
        jBtExcluirAcesso.setEnabled(!true);
        jBtSalvarAcesso.setEnabled(!true);
        jBtCancelarAcesso.setEnabled(!true);
        //
        jBtCopiarPerfil.setEnabled(true);
    }

    public void CancelarAcesso() {
        jComboBoxTelaAcesso.setEnabled(!true);
        //
        jComboBoxAbrir.setEnabled(!true);
        jComboBoxIncluir.setEnabled(!true);
        jComboBoxAlterar.setEnabled(!true);
        jComboBoxExcluir.setEnabled(!true);
        jComboBoxGravar.setEnabled(!true);
        jComboBoxConsultar.setEnabled(!true);
        //
        jBtNovoAcesso.setEnabled(true);
        jBtAlterarAcesso.setEnabled(!true);
        jBtExcluirAcesso.setEnabled(!true);
        jBtSalvarAcesso.setEnabled(!true);
        jBtCancelarAcesso.setEnabled(!true);
        //
        Integer rows = jTabelaAcessos.getModel().getRowCount();
        if (rows != 0) {
            jBtCopiarPerfil.setEnabled(true);
        }
    }

    public void pesquisarTelaAcesso() {
        jComboBoxTelaAcesso.removeAllItems();
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM TELAS ");
            conecta.rs.first();
            do {
                jComboBoxTelaAcesso.addItem(conecta.rs.getString("NomeTela"));
            } while (conecta.rs.next());
            jComboBoxTelaAcesso.updateUI();
        } catch (SQLException ex) {
        }
        conecta.desconecta();
    }

    public void verificarTelaAcesso() {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE NomeTela='" + jComboBoxTelaAcesso.getSelectedItem() + "' "
                    + "AND IdUsuario='" + jIdUsuario.getText() + "'");
            conecta.rs.first();
            nomeTelaUsuario = conecta.rs.getString("NomeTela");
            codigoUsuario = conecta.rs.getString("IdUsuario");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    public void pesquisarTodos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Usuário"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                count = count + 1;
                dataCadastro = conecta.rs.getString("DataCadastro");
                String diae = dataCadastro.substring(8, 10);
                String mese = dataCadastro.substring(5, 7);
                String anoe = dataCadastro.substring(0, 4);
                dataCadastro = diae + "/" + mese + "/" + anoe;
                jtotalRegistros.setText(Integer.toString(count)); // Converter inteiro em string para exibir na tela
                dados.add(new Object[]{conecta.rs.getInt("IdUsuario"), dataCadastro, conecta.rs.getString("StatusUsuario"), conecta.rs.getString("NomeUsuario")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Dados não encontrado, use o botão TODOS !!!");
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaUsuarios.setRowSorter(new TableRowSorter(modelo)); //FAZER ORDENAMENTO NA TABLEA  
        jTabelaUsuarios.setModel(modelo);
        jTabelaUsuarios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaUsuarios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaUsuarios.getTableHeader().setReorderingAllowed(false);
        jTabelaUsuarios.setAutoResizeMode(jTabelaUsuarios.AUTO_RESIZE_OFF);
        jTabelaUsuarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaUsuario();
        conecta.desconecta();
    }

    public void alinharCamposTabelaUsuario() {
        //
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //
        jTabelaUsuarios.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaUsuarios.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jTabelaUsuarios.getColumnModel().getColumn(2).setCellRenderer(centralizado);
    }

    public void limparTabela() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Data", "Status", "Nome do Usuário"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaUsuarios.setRowSorter(new TableRowSorter(modelo)); //FAZER ORDENAMENTO NA TABLEA  
        jTabelaUsuarios.setModel(modelo);
        jTabelaUsuarios.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(0).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(1).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(2).setPreferredWidth(70);
        jTabelaUsuarios.getColumnModel().getColumn(2).setResizable(false);
        jTabelaUsuarios.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTabelaUsuarios.getColumnModel().getColumn(3).setResizable(false);
        jTabelaUsuarios.getTableHeader().setReorderingAllowed(false);
        jTabelaUsuarios.setAutoResizeMode(jTabelaUsuarios.AUTO_RESIZE_OFF);
        jTabelaUsuarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void limparTabelaAcessos() {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Tela", "Abrir", "Incluir", "Alterar", "Excluir", "Gravar", "Consultar"};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAcessos.setModel(modelo);
        jTabelaAcessos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAcessos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTabelaAcessos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(5).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(6).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(6).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(7).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(7).setResizable(false);
        jTabelaAcessos.getTableHeader().setReorderingAllowed(false);
        jTabelaAcessos.setAutoResizeMode(jTabelaAcessos.AUTO_RESIZE_OFF);
        jTabelaAcessos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modelo.getLinhas().clear();
    }

    public void preencherTabelaAcessos(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Tela", "Abrir", "Incluir", "Alterar", "Excluir", "Gravar", "Consultar"};
        conecta.abrirConexao();
        try {
            conecta.executaSQL(sql);
            conecta.rs.first();
            do {
                pAbrir = conecta.rs.getInt("Abrir");
                if (pAbrir == 0) {
                    pAbrirAcesso = "Não";
                } else if (pAbrir == 1) {
                    pAbrirAcesso = "Sim";
                }
                pIncluir = conecta.rs.getInt("Incluir");
                if (pIncluir == 0) {
                    pIncluirAcesso = "Não";
                } else if (pIncluir == 1) {
                    pIncluirAcesso = "Sim";
                }
                pAlterar = conecta.rs.getInt("Alterar");
                if (pAlterar == 0) {
                    pAlterarAcesso = "Não";
                } else if (pAlterar == 1) {
                    pAlterarAcesso = "Sim";
                }
                pExcluir = conecta.rs.getInt("Excluir");
                if (pExcluir == 0) {
                    pExcluirAcesso = "Não";
                } else if (pExcluir == 1) {
                    pExcluirAcesso = "Sim";
                }
                pGravar = conecta.rs.getInt("Gravar");
                if (pGravar == 0) {
                    pGravarAcesso = "Não";
                } else if (pGravar == 1) {
                    pGravarAcesso = "Sim";
                }
                pConsultar = conecta.rs.getInt("Consultar");
                if (pConsultar == 0) {
                    pConsultarAcesso = "Não";
                } else if (pConsultar == 1) {
                    pConsultarAcesso = "Sim";
                }
                dados.add(new Object[]{conecta.rs.getString("IdTela"), conecta.rs.getString("NomeTela"), pAbrirAcesso, pIncluirAcesso, pAlterarAcesso, pExcluirAcesso, pGravarAcesso, pConsultarAcesso});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTabelaAcessos.setModel(modelo);
        jTabelaAcessos.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTabelaAcessos.getColumnModel().getColumn(0).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(1).setPreferredWidth(400);
        jTabelaAcessos.getColumnModel().getColumn(1).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(2).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(3).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(3).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(4).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(5).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(5).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(6).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(6).setResizable(false);
        jTabelaAcessos.getColumnModel().getColumn(7).setPreferredWidth(60);
        jTabelaAcessos.getColumnModel().getColumn(7).setResizable(false);
        jTabelaAcessos.getTableHeader().setReorderingAllowed(false);
        jTabelaAcessos.setAutoResizeMode(jTabelaAcessos.AUTO_RESIZE_OFF);
        jTabelaAcessos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        alinharCamposTabelaAcessos();
        conecta.desconecta();
    }

    public void alinharCamposTabelaAcessos() {
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        //       
        jTabelaAcessos.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(4).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(5).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(6).setCellRenderer(centralizado);
        jTabelaAcessos.getColumnModel().getColumn(7).setCellRenderer(centralizado);
    }

    public void objLog() {
        objLogSys.setDataMov(dataModFinal);
        objLogSys.setHorarioMov(horaMov);
        objLogSys.setNomeModuloTela(nomeModuloTela);
        objLogSys.setIdLancMov(Integer.valueOf(jIdUsuario.getText()));
        objLogSys.setNomeUsuarioLogado(nameUser);
        objLogSys.setStatusMov(statusMov);
    }

    public void buscarAcessoUsuario(String nomeTelaAcesso) {
        conecta.abrirConexao();
        try {
            conecta.executaSQL("SELECT * FROM USUARIOS "
                    + "WHERE NomeUsuario='" + nameUser + "'");
            conecta.rs.first();
            codigoUser = conecta.rs.getInt("IdUsuario");
        } catch (Exception e) {
        }
        try {
            conecta.executaSQL("SELECT * FROM TELAS_ACESSO "
                    + "WHERE IdUsuario='" + codigoUser + "' "
                    + "AND NomeTela='" + nomeTelaAcesso + "'");
            conecta.rs.first();
            codUserAcesso = conecta.rs.getInt("IdUsuario");
            codAbrir = conecta.rs.getInt("Abrir");
            codIncluir = conecta.rs.getInt("Incluir");
            codAlterar = conecta.rs.getInt("Alterar");
            codExcluir = conecta.rs.getInt("Excluir");
            codGravar = conecta.rs.getInt("Gravar");
            codConsultar = conecta.rs.getInt("Consultar");
            nomeTela = conecta.rs.getString("NomeTela");
        } catch (Exception e) {
        }
        conecta.desconecta();
    }

    //AINDA NÃO FOI IMPLEMENTADO
    // CRIPTOGRAFIA SIMETRICA
    public void criptografarSenhaUsuarioSimetrico(String password) {
        // CRIPTOGRAFIA SIMETRICA: AES,RC2,RC4,RC5, IDEA, Blowfish
        try {
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            SecretKey secrecKey = keyGenerator.generateKey();
            Cipher cipher;
            cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.ENCRYPT_MODE, secrecKey);
            byte[] criptografia = cipher.doFinal(password.getBytes());
            senhaCriptografada = criptografia;
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void descriptografarSenhaUsuarioSimetrica(String password) {
        // CRIPTOGRAFIA SIMETRICA: AES,RC2,RC4,RC5, IDEA, Blowfish
        try {
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            SecretKey secrecKey = keyGenerator.generateKey();
            Cipher cipher;
            cipher = Cipher.getInstance("AES");
            cipher.init(Cipher.DECRYPT_MODE, secrecKey);
            byte[] criptografia = cipher.doFinal(password.getBytes());
            senhaDescriptografada = criptografia;
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(TelaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
